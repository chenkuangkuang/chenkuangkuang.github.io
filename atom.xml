<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>框框之下</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.kuang2.cn/"/>
  <updated>2024-02-07T08:30:33.092Z</updated>
  <id>http://www.kuang2.cn/</id>
  
  <author>
    <name>框框之下</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024龙年正确姿势生存指南</title>
    <link href="http://www.kuang2.cn/2024/02/05/2024%E9%BE%99%E5%B9%B4%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/"/>
    <id>http://www.kuang2.cn/2024/02/05/2024龙年正确姿势生存指南/</id>
    <published>2024-02-05T21:30:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<p>转眼即逝又是一年，所幸2023也没白过，继续打怪升级习得不少经验、教训、技巧、心得以及野路子，借地分享，以御新年新敌。</p><p>关于看电视</p><p>众所周知带娃的是天底下最没资格同时也最没时间看电视的，但一年到头终于还是幸运挤得几天空闲，来宠幸一下客厅里这头明明个头最大但大部分时间都当不存在的大象。当然，会员是没有的，能看的不想看，想看的问你啥时候升级VIP。这倒也不难，只需电脑上略一搜索，找找在线资源或者BT种子也是铺天盖地。问题就是相比在电视上一键打开，这样一番等待下载-拷贝U盘-翘着屁股在电视后面找插口-识别内容了才能观看，体验明显等而下之。今年突发奇想，在原本是安卓系统的电视上尝试安装了连接电脑的远程桌面APP，输入IP即可同步电脑界面和声音。可惜电视普遍性能孱弱，掉帧严重——就是你明明看到人物的动作正常，声音也同步，但是那反应就像放幻灯片，一幅一幅比皮影戏还不如。</p><p>于是放弃，实际在排除了充值的选项之后，最好的方式就是直连电脑主机，只要你能找到在线资源并且保证网络通畅就行了。有鉴于此，我还着重考虑一下拼爹爹上几百块的巴掌大迷你主机，但想到这一年等一回的恩宠频次，还是作罢。</p><p>关于看病吃药</p><p>看病吃药本非常事，却在疫情之后成了家常便饭。这一年下来，医院也跑了至少五次以上了。有些套路逐渐了然于胸，比如医生总免不了在西药以外给你带几副中药，看似助养身体，实则只为创收。这一点在大医院的中级医生（排除资深老专家和无名小医生）和社区医院的医生身上尤甚。医院的还会给你提前说开了哪些，社区的可能嫌人多嘴杂，给你默默开好都不带问的。这时候就很考验个人体质了，在病重之时保持大脑的清醒和迅捷的反应。看到中药赶紧让他划掉，只取治本的西药即可。</p><p>关于睡眠噪音</p><p>作为八年以上的资深睡眠耳塞重度使用用户，睡眠噪音一直是萦绕在耳边（以及耳内）的老大难问题。目前靠3M或者安耳悠的耳塞只能说凑活过。亟待再迈一步，尝试一下比如上百块的3M睡眠耳罩或者各品牌的降噪耳机。</p><p>今年的新发现是，与其门窗紧闭耳塞上阵，同时心里默念十万个别吵别吵，不如化被动为主动，干脆整上一个噪音发生器（比如夏天必备的USB小风扇），开最大档位，把那些窸窸窣窣的杂音给盖过去。有规律的白噪音也是相当助眠的。只是建议别直接放床上而是放在床头柜或者床边小板凳上，太靠近耳朵的震动会让你感觉自己成了睡在轿车引擎盖上的猫。</p><p>关于刷抖音</p><p>抖音是个好东西，这是我一直信奉的观点。就跟人们说电视电影或者游戏也是个好东西一样。工具或者内容，只是工具和内容本身，如果被滥用或者太沉迷，那必然该使用者背锅。看到有人吃饭被噎死或喝水被呛死，谁会傻到来痛斥一番食物和水呢？</p><p>今年在抖音上花掉的时间肉眼可见的增长了。甚至养成每天都会刷上一刷的习惯。但还好倒也不会专门花整块的空余，也就两个固定的地点：坑上、炕上。如厕时间和酝酿睡意的时间，总是难以打发或者说一般也是免不了被浪费掉的，不如找点乐子，就当给大脑喂点零食。</p><p>玩的多了，也发现了一些很宝藏的内容。比如知道了热水器的双金属片如何变形后通过杠杆原理推动电源断电；学会了左转车道不管是实线虚线都能一把掉头的实用小技巧；还了解到印度宝宝可以不用热奶器消毒机恒温水壶就着冷水就能灌一大壶奶粉。最近新关注的一个号则教会了我怎么欣赏莫奈、伦布朗和马塞尔·杜尚。</p><p>当然抖音也有个最大的缺点，就是刷完了的空虚，并且也缓解不了白天的疲累。还好今年我学习到，原因在于你的娱乐方式必须和你的工作方式相反。如果你是脑力劳动居多，那么运动或者体力劳动才能给你彻底解乏。</p><p>关于各种小毛病：腰酸背痛/干眼症/腕管综合征/口腔溃疡</p><p>对于我们这样80%时间都正襟危坐同电脑熬鹰的办公室人士，虽说风吹不着雨淋不着，身体的耗费却也不少，腰椎和眼睛就是首当其冲。</p><p>个人对于腰痛的策略依然延续以前的方案，另备一个站着操作的小桌子，一个夹起来的便携屏，再搭配HDMI切换器，随时一键切换站坐姿态。另辅以闲暇时间的简单运动，练一练“桥”“小飞燕”之类的，目前倒也啥大问题。最近半年甚至能减少到一周才一到两次的站立办公频次。</p><p>对于用眼过度，在此前用过一段时间热敷眼罩之后，干眼症其实已经缓解，今年则坚持随时佩戴蓝光眼镜，不适的时间也大大减少了。</p><p>腕部不适则是鼠标用太多，我本已习惯左右手换着来，今年还打算试试苹果的妙控板。最后综合参考钱包和网上的建议，又坚持使用了一段时间的腕托。没想到效果超出预期。看来有些事情初看一般般，要坚持了才能展现真正的效果。</p><p>最后至于口腔溃疡，一年补一个疗程的葡萄糖酸锌，今年也未例外。甚至为了提高免疫力加大了剂量；虽然一股酸水味确实难以入口，不免让人胃酸上涌，但比起舌头生疮喝水都要呲牙咧嘴的体验，还是好受多了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转眼即逝又是一年，所幸2023也没白过，继续打怪升级习得不少经验、教训、技巧、心得以及野路子，借地分享，以御新年新敌。&lt;/p&gt;
&lt;p&gt;关于看电视&lt;/p&gt;
&lt;p&gt;众所周知带娃的是天底下最没资格同时也最没时间看电视的，但一年到头终于还是幸运挤得几天空闲，来宠幸一下客厅里这头明明
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>react native配合webview搭建web server服务</title>
    <link href="http://www.kuang2.cn/2023/12/23/react%20native%E9%85%8D%E5%90%88webview%E6%90%AD%E5%BB%BAweb%20server%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.kuang2.cn/2023/12/23/react native配合webview搭建web server服务/</id>
    <published>2023-12-23T17:22:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<p>通常如果我们想在react native项目中使用h5，会考虑使用webview引用本地assets文件夹中的html静态文件。但这样的使用方式限制很大，比如无法使用http下才能使用的一些方法，亦或者是被cross origin这样的跨域错误折磨得没脾气。</p><p>这个时候我们不得不考虑将web挂载到远程的网站上，直接让webview指向网站地址。但这样又会明显增加维护复杂度，同时用户体验也会极度依赖于网络的稳定和网速。</p><p>不妨考虑另一种思路，在本地host一个web server，就像服务器干的事情一样。刚好有一个能堪当此重任的库：react-native-http-bridge-refurbished</p><p>用法也很简单：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">BridgeServer</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;react-native-http-bridge-refurbished&#x27;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> server = <span class="keyword">new</span> <span class="title class_">BridgeServer</span>(<span class="string">&#x27;http_service&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">        server.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="attr">message</span>: <span class="string">&#x27;OK&#x27;</span>&#125;; <span class="comment">// or res.json(&#123;message: &#x27;OK&#x27;&#125;);</span></span><br><span class="line">        &#125;);</span><br><span class="line">        server.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            server.<span class="title function_">stop</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本仓库的官方例子过于简单，还无法基于此建立我们想要的web server。还需要引入react-native-fs 来读取html等文件。</p><p>使用readFileAssets读取assets文件夹下的html文件，同时判断请求的res的类型来指定不同的header type，即可完整处理html关联文件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; url &#125; = req;</span><br><span class="line"><span class="keyword">let</span> filePath=<span class="string">&quot;htmls/badge.html&quot;</span>, type = <span class="string">&#x27;text/html&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!url.<span class="title function_">endsWith</span>(<span class="string">&#x27;html&#x27;</span>)) &#123;</span><br><span class="line">    filePath = <span class="string">&quot;htmls&quot;</span> + url;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (url.<span class="title function_">endsWith</span>(<span class="string">&#x27;css&#x27;</span>)) &#123;</span><br><span class="line">  type = <span class="string">&#x27;text/css&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (url.<span class="title function_">endsWith</span>(<span class="string">&#x27;js&#x27;</span>)) &#123;</span><br><span class="line">  type = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (url.<span class="title function_">endsWith</span>(<span class="string">&#x27;png&#x27;</span>)) &#123;</span><br><span class="line">  type = <span class="string">&#x27;image/png&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> format = url.<span class="title function_">endsWith</span>(<span class="string">&#x27;png&#x27;</span>) ? <span class="string">&#x27;base64&#x27;</span> : <span class="string">&#x27;utf8&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> file= <span class="keyword">await</span> <span class="variable constant_">RNFS</span>.<span class="title function_">readFileAssets</span>(filePath, format);</span><br><span class="line"><span class="keyword">return</span>  res.<span class="title function_">send</span>(<span class="number">200</span>, type, file);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通常如果我们想在react native项目中使用h5，会考虑使用webview引用本地assets文件夹中的html静态文件。但这样的使用方式限制很大，比如无法使用http下才能使用的一些方法，亦或者是被cross origin这样的跨域错误折磨得没脾气。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="JS" scheme="http://www.kuang2.cn/tags/JS/"/>
    
      <category term="react native" scheme="http://www.kuang2.cn/tags/react-native/"/>
    
      <category term="web server" scheme="http://www.kuang2.cn/tags/web-server/"/>
    
      <category term="webview" scheme="http://www.kuang2.cn/tags/webview/"/>
    
  </entry>
  
  <entry>
    <title>《CSS选择器世界》笔记</title>
    <link href="http://www.kuang2.cn/2023/12/03/%E3%80%8ACSS%E9%80%89%E6%8B%A9%E5%99%A8%E4%B8%96%E7%95%8C%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.kuang2.cn/2023/12/03/《CSS选择器世界》笔记/</id>
    <published>2023-12-03T22:55:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<ol><li>以下两行语句结果不相等：<br>document.querySelectorAll(“#myId div div”).length;<br>document.querySelector(“#myId”).querySelectorAll(‘div div’).length;<br>CSS 选择器是独立于整个页面的<br>想要实现作用域效果可以这样写：<br>document.querySelector(“#myId”).querySelectorAll(‘:scope div div’).length;</li></ol><p>2.相邻兄弟选择符(&gt;)会忽略文本节点和注释节点</p><p>3.属性值匹配选择器<br>[attr]匹配包含指定属性的元素<br>[attr=”val”]值完全匹配选择器（引号可省略）<br>[attr~=”val”]单词完全匹配（值可能有多个，但只匹配单个单词，不匹配单词中的字符串）<br>[attr|=”val”]起始片段完全匹配（匹配单词或单词加短横杠）</p><p>4.属性字符匹配：<br>[attr^=”val”] 匹配单词开头<br>[attr$=”val”] 匹配单词结尾<br>[attr*=”val”] 匹配单词包含</p><p>5.属性匹配可以增加字母i以忽略大小写（全大写，全小写，部分大小写均支持），如[attr*=”val” i]</p><p>6.:hover配合transition的可以实现鼠标悬浮的延迟显隐效果</p><p>7.:focus默认只能匹配特定元素：表单元素，a，textarea，summary等。普通元素想要响应需要设置contenteditable或tabindex属性</p><p>8.:focus和:focus-within的区别。前者只响应当前元素聚焦，后者响应当前元素或子元素聚焦；</p><p>9.链接伪类设置样式的推荐顺序：:link &gt; :visited &gt; :hover &gt; :active </p><p>10.:target 锚点伪类，可设置url的hssh值对应id的元素的样式，也可以实现简单的折叠收起或选项卡效果（类似:checked也可以）<br>:target-within则用于实现:target无法实现的包含子元素效果</p><p>11.radonly的输入框不能输入，但能被表单提交；disabled的输入框不能输入也不能提交</p><p>12.:placeholder-shown匹配placeholder显示时的输入框</p><p>13.:default 匹配默认值（比如checked了的）对应的表单元素（设置样式可方便用户知道哪个是默认值，或设置为推荐）</p><p>14.其他表单伪类：<br>有效验证伪类:valid和:invalid；<br>范围验证伪类:in-range和:out-of-range<br>可选性伪类:required和:optinal</p><p>15.:empty匹配空标签（有空格和注释都不会匹配）（可用于信息展示时数据为空的统一样式处理，如加短横杠，又或者是显示 no data）</p><p>16.:only-child 匹配唯一的子元素（适合动态加载子元素个数不确定的情形）</p><p>17.:nth-child() 从前面开始匹配 :nth-last-child()从后面开始匹配<br>参数可以是odd（奇数）even（偶数）或者类似An+B这样的不定数。适应场景如：斑马线条纹；列表边缘对齐；</p><p>18.伪元素级联1（多个匹配同时生效）： li:first-child:nth-last-child(2) 匹配第一个子元素和从后往前数的第二个子元素</p><p>19.:nth-of-type() 和 :nth-last-of-type() </p><p>20.伪元素级联2:多个条件同时满足<br>input:not(:disabled):not(:read-only){}</p><p>21.:is()和:not() 相反。:is的参数可以多个，通过逗号分隔；:not的参数只能是一个</p><p>22.:fullscreen全屏伪类，匹配全屏的元素</p><p>23.:lang(en) 语言伪类</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;以下两行语句结果不相等：&lt;br&gt;document.querySelectorAll(“#myId div div”).length;&lt;br&gt;document.querySelector(“#myId”).querySelectorAll(‘div div’).l
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="css" scheme="http://www.kuang2.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>《CSS新世界》读书笔记</title>
    <link href="http://www.kuang2.cn/2023/11/20/%E3%80%8ACSS%E6%96%B0%E4%B8%96%E7%95%8C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.kuang2.cn/2023/11/20/《CSS新世界》读书笔记/</id>
    <published>2023-11-20T22:35:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<p>1.initial/unset/revert 关键字区别<br>initial: CSS标准定义的初始值，比如font-size的初始值为medium<br>unset: 不固定关键字，有继承性时表现为inherit，没有继承性时表现为initial<br>revert: 浏览器内置样式</p><p>2.all属性指代几乎所有属性，方便重置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line">  <span class="attribute">all</span>: inherit</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.width: fit-content 指定尺寸为元素尺寸，但不超出容器尺寸</p><p>4.逻辑属性：start/end，通常配合direction属性使用，亦或者在聊天窗口之类的对称布局中使用</p><p>5.最常用的逻辑属性：inset，比如设置inset:0用于缩写替代left:0;right:0;top:0;bottom:0;</p><p>6.border-image：更自由的border效果</p><p>7.position: sticky 粘性定位</p><p>8.善用word-break：keep-all配合空格（如“张三 李四 王二麻子”）保护中文词组不被断开</p><p>9.使用<wbr>换行声明标签来精准控制换行</p><p>10.颜色透明度的十六进制</p><p>00%=FF（不透明）<br>5%=F2<br>10%=E5<br>20%=CC<br>30%=B2<br>40%=99<br>50%=7F<br>60%=66<br>70%=4c<br>80%=33<br>90%=19<br>100%=00（全透明）</p><p>11.background-size的值<br> cover: 覆盖，可能溢出<br>contain: 包含，可能留空</p><p>12.background多背景实现加/减图标</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">box&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(currentColor, currentColor) no-repeat center/.<span class="number">875em</span> <span class="number">2px</span>, </span><br><span class="line">                <span class="built_in">linear-gradient</span>(currentColor, currentColor) no-repeat center/<span class="number">2px</span> .<span class="number">875em</span>,</span><br><span class="line">                ghostwhite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多多背景效果实现：<a href="https://projects.verou.me/css3patterns/">https://projects.verou.me/css3patterns/</a></p><p>13.background-clip 限制背景显示区域<br>可用值：border-box，padding-box，content-box，text<br>background-clip: text实现渐变文字背景：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.text-gradient</span> &#123;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(deepskyblue, deeppink);</span><br><span class="line">        -webkit-<span class="attribute">background-clip</span>: text;</span><br><span class="line">        <span class="attribute">background-clip</span>: text;</span><br><span class="line">        <span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>14.background-origin 规定了指定背景图片background-image属性的原点位置的背景相对区域</p><p>15.background-repeat: space(均匀平铺背景图), round(重复平铺背景图并拉伸，保证不留空隙)</p><p>16.background-position指定起始方位</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">1.jpg</span>) no-repeat right <span class="number">20px</span> bottom <span class="number">20px</span>;</span><br></pre></td></tr></table></figure><p>background-position也支持逐一设置多背景中每个背景的位置</p><p>17.outline-offset设置负值避免被相邻元素遮挡</p><p>18.一些不指定层叠属性但能创建层叠上下文的方式：<br>比如opacity: 0.99 让顺序在前的元素覆盖后面的元素<br>transform不为none</p><p>19.opacity父子元素同时使用时效果叠加，子元素 = 父opacity*子opacity</p><p>20.border-radius可以指定水平半径和垂直半径：30px/60px(椭圆的圆角效果)，也可以设置更多不规则圆角效果</p><p>21.box-shadow内阴影inset可以模拟边框（替代透明边框方案），也可以给元素加一层背景色，实现点击按钮的颜色加深效果</p><p>22.box-shadow的第四个长度值扩展半径，设置负值时让阴影只在一侧显示</p><p>23.box-shadow支持多阴影，方便实现多种效果：<br>多边框效果<br>渐变边框效果<br>loading的多个圆点效果<br>云朵效果<br>3D投影效果</p><p>24.transform多种特性细节:</p><ul><li>尺寸不会变化</li><li>内敛元素无效</li><li>产生锯齿和虚化：只能依靠更高分辨率的显示器</li><li>应用多种变换时，不同顺序产生的效果不同</li></ul><p>25.CSS高性能动画三要素：<br>绝对定位<br>opacity属性<br>transform属性</p><p>26.元素应用transform属性后的变化</p><ul><li>创建层叠上下文</li><li>固定定位失效（如fixed）</li><li>改变overflow对绝对定位元素的限制</li><li>改变绝对定位元素的包含块（transform不为none即可等同于position:relative）</li></ul><p>27.了解三个函数</p><ul><li>min()<ul><li>max()</li><li>clamp(min, val, max) = max(MIN, min(VAL, MAX))</li></ul></li></ul><p>28.transition-delay使用负值来跳到对应动画帧</p><p>29.transition-property不支持display，但支持visibility</p><p>30.animation支持多个动画的组合，方便复用</p><p>31.@keyframes规则</p><ul><li>起止关键帧可以不设置</li><li>关键帧列表可以合并（0%, 50%, 100%{xxx}）</li><li>不同的关键帧选择器时无序的</li><li>重复定义的关键帧不是完全被覆盖（定义的不同属性会合并，相同属性覆盖）</li><li>样式可以不连续</li><li>!important无效（连带定义的属性值无效）</li><li>优先级最高</li></ul><p>32.animation-direction的两个值</p><ul><li>reverse 定义动画方向是反过来（从to到from）</li><li>alternate 可以实现钟摆来回摆动效果</li></ul><p>33.动画次数可以是小数，实际效果就是按百分比执行</p><p>34.aimation-fill-mode 动画填充模式</p><ul><li>forwards 动画结束后，元素应用结束时的属性值</li><li>backwards 动画结束后应用最初的属性值</li></ul><p>35.animation动画可以暂停，继续播放和重启</p><ul><li>暂停/继续播放：将animaiton-play-state的值由running改为paused</li><li>重启：ele.offsetWidth //触发重绘</li></ul><p>36.animation-timing-function: step(number, position)实现跳跃动画</p><p>37.分栏布局columns: 2 将一个垂直的列表分成两列<br>column-width 理想宽度 / column-count 理想数目：最终实现不会完全按照该数值<br>column-gap是 gap的子属性<br>column-rule 分割线样式，语法同border<br>column-span：子元素设置，是否跨栏显示</p><p>38.flex弹性布局<br>父元素设置display: flex后子元素的变化：</p><ul><li>子项块状化（文本元素也有效）</li><li>子项浮动无效</li><li>子项支持z-index</li><li>子项margin值不会合并</li><li>子项巧用margin: auto可以撑开剩余空间</li><li>子项设置绝对定位，会脱离弹性布局</li><li>子项想要设置尺寸，可以使用flex-basis<br>flex-flow是flex-direction+ flex-wrap的缩写</li></ul><p>39.flex对齐属性<br>justify-content: space-evenly 空白间距完全相等<br>align-items是设置在容器上的，align-self是设置在某个子项上的<br>align-items是控制每一个子项的垂直对齐方式，align-content是将子项作为整体设置<br>order调整子项的位置</p><p>40.flex属性的缩写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1个值是数值，表示flex-grow */</span></span><br><span class="line"><span class="attribute">flex</span>：<span class="number">1</span>;</span><br><span class="line"><span class="comment">/* 1个值是长度值，表示flex-basis */</span></span><br><span class="line"><span class="attribute">flex</span>：<span class="number">100px</span>;</span><br><span class="line"><span class="comment">/* 2个值，第1个值一定是flex-grow，数值就是flex-shrink，长度值就是flex-shrink */</span></span><br><span class="line"><span class="attribute">flex</span>：<span class="number">1</span> <span class="number">100px</span>;</span><br><span class="line"><span class="comment">/* 2个值，flex-grow和flex-shrink  */</span></span><br><span class="line"><span class="attribute">flex</span>：<span class="number">1</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">/* 3个值 */</span></span><br><span class="line"><span class="attribute">flex</span>：<span class="number">1</span> <span class="number">1</span> <span class="number">100px</span>;</span><br></pre></td></tr></table></figure><p>41.flex的分配<br>flex-grow 决定了剩余空间的分配比例，默认为0，<br>flex-shrink 决定了剩余空间不足的分配比例，默认为1（数值越大，最终长度越小）<br>flex-basis决定了分配的基础尺寸<br>经典案例见：<a href="https://demo.cssworld.cn/new/6/2-9.php">https://demo.cssworld.cn/new/6/2-9.php</a></p><p>42.flex:0/none/auto/initial的场景</p><ul><li>flex:initial等同于设置flex:0 1 auto;表现为空间剩余时不扩张（0），空间不足时会收缩（1），同时尺寸自适应内容（auto）</li><li>flex:0等同于设置flex: 0 1 0%;（最小内容宽度，文字会一柱擎天）</li><li>flex: none等同于设置flex: 0 0 auto;（最大内容宽度，溢出不换行，适合文字较少，不会换行的元素，比如按钮）</li><li>flex: 1 等同于设置flex: 1 1 0%; （充分利用剩余空间，同时不侵占其他元素空间，适合等分父元素）</li><li>flex: auto 等同于设置flex: 1 1 auto; （充分利用剩余空间，同时尺寸按照内容分配，适合基于内容动态分配，比如导航菜单不同内容长度时的按内容长度分配）</li></ul><p>43.flex尺寸计算优先级：<br>最大最小尺寸限制 &gt; 弹性增长或收缩 &gt; 基础尺寸或内容尺寸（基础尺寸由flex-basis活 width指定，内容尺寸指最大内容宽度）</p><p>44.flex-basis属性与尺寸计算</p><ul><li>外在尺寸够大，内容尺寸够小，则width和flex-basis 的表现基本一致（flex-basis可能会被没有换行点的最小内容宽度拉长，大于width）</li><li>width和flex-basis同时设置数值，则width被忽略</li><li>flex-basis设置auto，则使用width作为基础尺寸</li><li>如果flex-basis 和 width都是auto，则使用子项的最大内容宽度作为基础尺寸</li></ul><p>45.grid布局</p><p>46.css shape布局</p><p>47.@media规则由4部分组成</p><ul><li>媒体查询修饰符only/not （only已无意义）</li><li>媒体类型 screen</li><li>媒体条件 and</li><li>媒体特性max-width</li></ul><p>48.使用媒体查询检测触摸设备</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">hover</span>: none)&#123;  <span class="comment">/*表示设备无法悬停*/</span></span><br><span class="line">  <span class="selector-tag">figcaption</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>49.vh的妙用：内容不足一屏时，底栏紧贴窗口底部；内容超过一屏时，底栏紧贴页面最下方</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">content</span>&gt;</span><span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>50.touch-action控制设备的触摸行为<br>取消300ms点击延迟：对html标签设置touch-action: manipulation; // 不允许双击缩放<br>还可以限制滚动方向等</p><p>51.css自定义属性可以声明类型包括：颜色值，数值，起止色值，方向，渐变参数或渐变表达式；</p><p>52.js设置css自定义属性：box.style.setProperty(‘–color’, ‘red’);<br>js获取自定义属性值：getComputedStyle(box).getPropertyValue(‘–color’);</p><p>53.使用object-fit控制图片尺寸：<br>fill：填充，内容会被拉伸，不保证原始比例<br>contain：包含，保持比例，但可能留白（适合列表）<br>cover：覆盖，保持比例，但可能溢出（适合缩略图）<br>none：保持比例，无视外部尺寸<br>scale-down：较大时等于contain，较小时等于none（适合全屏大图预览）</p><p>54.使用object-position 控制替换内容的位置，默认值：50% 50%，常用在头像展示将脸部居中，也可以配合雪碧图来实现动画</p><p>55.cross-fade()函数让两张图像半透明混合</p><p>56.element()函数让任意DOM元素的渲染效果变成图像（跟随原始元素同步变化）（仅firefox支持）</p><p>57.放大图片以解决模糊图片的边缘透明效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>58.brightness()函数实现黑白着色效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.button-button</span> <span class="selector-class">.icon</span>&#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">100</span>);  <span class="comment">/* 让图标变成白色 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>59.drop-shadow()可以实现镂空投影效果</p><p>60.backdrop-filter 可以实现背景毛玻璃效果</p><p>61.mask+mask-image实现半透明的PNG图像遮罩</p><p>62.clip-path 用来对任意元素的可视区域进行裁剪（不影响元素布局）</p><p>63.offset属性实现不规则路径运动</p><p>64.滚动相关<br>scroll-behavior:smooth 实现平滑滚动<br>overscroll-behavior:contain 实现子元素滚动结束不出发父元素滚动<br>overflow-anchor滚动锚定（新插入内容不影响当前滚动查看的位置）<br>css scroll snap 定义滚动结束自动调整位置</p><p>65.pointer-events 子元素的属性值可以覆盖祖先元素，适合在外层元素禁用点击时，内层子元素依然响应鼠标操作</p><p>66.resize属性允许元素拉伸：本质是改变width和height</p><p>67.cater-color 改变光标颜色</p><p>68.user-select: all 允许选中整个元素（适合卡片选择 或 复制整段文本）</p><p>69.::selection伪元素改变选中文字的颜色和背景色</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.initial/unset/revert 关键字区别&lt;br&gt;initial: CSS标准定义的初始值，比如font-size的初始值为medium&lt;br&gt;unset: 不固定关键字，有继承性时表现为inherit，没有继承性时表现为initial&lt;br&gt;revert: 
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="css" scheme="http://www.kuang2.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>羊道下的游牧民族生活</title>
    <link href="http://www.kuang2.cn/2023/08/17/%E7%BE%8A%E9%81%93%E4%B8%8B%E7%9A%84%E6%B8%B8%E7%89%A7%E6%B0%91%E6%97%8F%E7%94%9F%E6%B4%BB/"/>
    <id>http://www.kuang2.cn/2023/08/17/羊道下的游牧民族生活/</id>
    <published>2023-08-17T20:55:00.000Z</published>
    <updated>2024-02-07T08:30:33.108Z</updated>
    
    <content type="html"><![CDATA[<p>1.关于转场：几乎每个几个月就要转场搬一次家，毡房一拆，行李打包，各种锅碗瓢盆往骆驼肩上一挂，跋涉好几天好几百公里，不管平地、爬山还是涉水，不论晴天、刮风抑或下雨，就算全身淋个湿透，腿脚冻成冰；</p><p>2.关于娱乐：游牧生活不仅是无聊，简直就是干瘪。大人没有电视手机，小孩没有玩具公园。但也很忙，放羊、放牛，挤奶，做酸奶，剪羊毛，捡柴，打水，洗衣服，再赶羊赶牛入圈，从日出忙到日落；孩子们也早早地加入劳动，最早的两岁就开始帮忙捡柴，打水了；</p><p>3.关于电子设备：唯一的可能存在的电子设备是收音机、相机和卫星电话。不过前两样往往坏了没地方修，相机拍了照片也没地方洗（不过洗出来的相册倒是解闷的一大趣事），卫星电话则只有少数家庭有，邻居借用倒也不用收钱；</p><p>4.关于零食：能接触到的零食只有从拖依（宴席）上捞来的糖果，和偶尔在商业区买的娃哈哈。牧区的孩子拿到一瓶娃哈哈可以开心一整天，轮流一人喝一口，喝完了还能嗦上好几天；</p><p>5.关于邻里：家与家的之间的居住是很分散的，一般至少一公里外，但挡不住一颗走街访友的心。大的劳动基本都是好几个家庭一起行动，今天忙这家，明天帮那家。</p><p>6.关于社交：最大最受重视的社交同时也是最大的娱乐活动就是拖依，内容包括且不限于：结婚、分家、生孩子等等。除了吃席之外还会安排舞会；也就是不仅有白天成年人/中年人的席，还有半夜未成年人/年轻人的席，24小时不间断；一旦听说哪家有拖依，往往能期待好几个月；当一般都不会很近，远的可能跋涉好几十公里，骑马都要一两天的路；</p><p>7.关于食物：最主要的充饥物就是烤馕，等同于湖北地区的锅盔，当然是没肉的（往往只有办一场拖依或者搞大型劳动的时候才会杀羊宰牛），而且是一次性烤好些个，放个十天半个月照样吃（新疆的食物因为干燥的关系基本很难坏）。顶多沾点奶制品的残余物黄油，又或者是泡茶水喝。一天倒是有一顿米饭，就是忙碌了一天之后的正餐——晚饭。但也就挤点酱油，炒一个青菜，丢点同样是放了十天半个月甚至半年一年的骨头，也能吃的很香；</p><p>8.关于茶：喝茶是游牧民族最主要的休闲方式。基本上一天要喝好多次。每次都要打好水，烧水，铺开餐布，布茶，喝茶，再收碗……这样的操作一天最多有上十次。每忙完一阵就一定要喝道茶，还不止一杯。慢悠悠喝半天，再配点馕泡着吃，也算是惬意的小憩了；</p><p>9.关于待客：待客是游牧民族的一大“正事”，基本上只要有人拜访抑或只是路过，不管认不认识见没见过，都要进门招待一番。布茶正是是待客的重要环节。做客人的也毫不客气，上门就是为了吃饭或喝茶。如果是转场期间，碰到拖家带口牵着骆驼转下一个场的人们路过，则还要提前备了酸奶在路口迎接，再殷殷送别。游牧民族的所谓“礼性”已深入骨髓，做客人时的自然随意，和做主人时的殷勤关怀，构成了和谐的正反面，让外人觉得整个民族就好似一个大家庭一般；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.关于转场：几乎每个几个月就要转场搬一次家，毡房一拆，行李打包，各种锅碗瓢盆往骆驼肩上一挂，跋涉好几天好几百公里，不管平地、爬山还是涉水，不论晴天、刮风抑或下雨，就算全身淋个湿透，腿脚冻成冰；&lt;/p&gt;
&lt;p&gt;2.关于娱乐：游牧生活不仅是无聊，简直就是干瘪。大人没有电视手机
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>react native如何实现3D效果及视频导出？</title>
    <link href="http://www.kuang2.cn/2023/07/07/react%20native%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B03D%E6%95%88%E6%9E%9C%E5%8F%8A%E8%A7%86%E9%A2%91%E5%AF%BC%E5%87%BA%EF%BC%9F/"/>
    <id>http://www.kuang2.cn/2023/07/07/react native如何实现3D效果及视频导出？/</id>
    <published>2023-07-07T22:00:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<p>对于3D实现，当然少不了threejs。再加上react，那一定首推react-three-fiber。刚好react-three-fiber也是<a href="https://docs.pmnd.rs/react-three-fiber/getting-started/installation#react-native">支持native使用的</a>。</p><p>然而经过实测，react-three-fiber能实现原生native的3d效果是没错，但加载gltf却是个大坑，至今有issues没解决。（官网文档写到React Native的部分，也只有简单的mesh案例）于是放弃，还是得像在RN中加载map一样，老老实实考虑webview的方案。</p><p>虽说在RN中用webview看上去有点偷懒，但实话说有些技术还真就是web更好使。包括且不限于gis，xr/vr，crypto等。如果体验和性能上不构成阻碍，也不妨用一用webview这个万金油。</p><p>当当当……（此处省略千字）关于如何使用web（react-three-fiber）调用加载gltf的3d文件，网上教程就太多了。此处继续讨论核心问题。</p><p>首当其冲的是，RN加载webview的理想形式，当然是在本地文件夹中load一个静态的html。毕竟挂url网站一提高了维护成本，二也因为可能的网络原因影响了性能。几番搜索之下，找到了<a href="https://github.com/stereobooster/react-snap">react-snap</a>这个库。简单配置即可将常常需要web服务器支撑的react应用build成静态html。</p><p>然而须知静态html的限制还是蛮大的，果然刚喜滋滋的将打包好的html打开，就发现控制台报错资源跨域无法加载。包括gltf格式的3d文件，以及text3d使用的font文件（json格式）。又是几番尝试下，发现远程url加载是支持的。于是这个问题跳过了。</p><p>效果有了。进入我们议题的第二步：视频的生成和导出。</p><p>最初的设想是回到RN的领域解决。也确实发现了一个看上去似乎能满足需求的库： <a href="https://github.com/yutasuzuki/react-native-record-screen">react-native-record-screen</a>。然而加载进去死活跑不起来，报kotlin相关错误，无奈不是android高手，这个方案也搁置了。</p><p>既然本来就是web生成的页面，咱就继续考虑web方案吧。</p><p>首先想到的是webrtc。然后过于打断交互的确认框实在不适合我们项目的使用场景，放弃。（<a href="https://www.webrtc-experiment.com/getDisplayMedia/">webRTC体验在此</a>）</p><p>然后又是几番搜索，得知canvas本身就是支持流输出的：canvas.captureStream(60)。传参即帧率。然后可以实例化MediaRecorder来捕获生成视频流，完了再new一个blob传入URL.revokeObjectURL即可下载了。<a href="https://julien-decharentenay.medium.com/how-to-save-html-canvas-animation-as-a-video-421157c2203b">这篇文章写的很好。</a></p><p>简单贴一下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 获取视频流</span><br><span class="line">var chunks = [];</span><br><span class="line">var canvas_stream = canvas.captureStream(30); // fps</span><br><span class="line">// Create media recorder from canvas stream</span><br><span class="line">this.media_recorder = new MediaRecorder(canvas_stream, &#123; mimeType: &quot;video/webm; codecs=vp9&quot; &#125;);</span><br><span class="line">// Record data in chunks array when data is available</span><br><span class="line">this.media_recorder.ondataavailable = (evt) =&gt; &#123; chunks.push(evt.data); &#125;;</span><br><span class="line">// Provide recorded data when recording stops</span><br><span class="line">this.media_recorder.onstop = () =&gt; &#123;this.on_media_recorder_stop(chunks);&#125;</span><br><span class="line">// Start recording using a 1s timeslice [ie data is made available every 1s)</span><br><span class="line">this.media_recorder.start(1000);</span><br><span class="line"></span><br><span class="line">// 建立下载</span><br><span class="line">// Gather chunks of video data into a blob and create an object URL</span><br><span class="line">var blob = new Blob(chunks, &#123;type: &quot;video/webm&quot; &#125;);</span><br><span class="line">const recording_url = URL.createObjectURL(blob);</span><br><span class="line">// Attach the object URL to an &lt;a&gt; element, setting the download file name</span><br><span class="line">const a = document.createElement(&#x27;a&#x27;);</span><br><span class="line">a.style = &quot;display: none;&quot;;</span><br><span class="line">a.href = recording_url;</span><br><span class="line">a.download = &quot;video.webm&quot;;</span><br><span class="line">document.body.appendChild(a);</span><br><span class="line">// Trigger the file download</span><br><span class="line">a.click();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然而最大的坑出现了。MediaRecorder只能支持webm和x-matroska格式（见），离用户可以直接预览打开的mp4还很远。</p><p>至此进入到视频转格式领域。果然又绕不开ffmeng了。ffmeng倒也有web的实现方案。然而一通操作下来，发现最核心的转格式方法，需要浏览器的多进程相关api——SharedArrayBuffer。而此api在早期的浏览器版本中就被限制了。（<a href="issue：https://github.com/ffmpegwasm/ffmpeg.wasm/issues/263">见此问题: SharedArrayBuffer is not defined </a>）</p><p>基于issue的翻阅和第N回的疯狂搜索，又让我找到了个好东西：<a href="https://github.com/gzuidhof/coi-serviceworker">coi-serviceworker</a>。不改服务器配置即可享受安全限制的豁免，实现上述功能。可惜还是反过来限制了咱们想用webview加载静态html的初衷。但也非常满足了。</p><p>科学研究有云，低期望乃幸福本源。能做到如此程度，咱就偷着乐吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于3D实现，当然少不了threejs。再加上react，那一定首推react-three-fiber。刚好react-three-fiber也是&lt;a href=&quot;https://docs.pmnd.rs/react-three-fiber/getting-started/
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="JS" scheme="http://www.kuang2.cn/tags/JS/"/>
    
      <category term="react native" scheme="http://www.kuang2.cn/tags/react-native/"/>
    
      <category term="threejs" scheme="http://www.kuang2.cn/tags/threejs/"/>
    
  </entry>
  
  <entry>
    <title>我的神奇经历</title>
    <link href="http://www.kuang2.cn/2023/04/15/%E6%88%91%E7%9A%84%E7%A5%9E%E5%A5%87%E7%BB%8F%E5%8E%86/"/>
    <id>http://www.kuang2.cn/2023/04/15/我的神奇经历/</id>
    <published>2023-04-15T22:15:00.000Z</published>
    <updated>2024-02-07T08:30:33.104Z</updated>
    
    <content type="html"><![CDATA[<p>1.小学某次期末考试，我和坐得比较近（相互间隔一米）的两个小伙伴同时被一个从教室外扔来的木头砸到了头。</p><p>2.初中我唯一一次把暗恋的女生逗笑，是当着别人的面弯腰喊她姐姐。</p><p>3.高中继续暗恋初中喜欢的女生，像着迷一样把人家的空间照片打印下来放书桌旁边。</p><p>4.作为一个典型的内向人士，大学时候可能是成功学看多了，竟然尝试自我突破，尝试去做了手机销售（当然是一台没卖出去），以及在宿舍里挨个敲门推销手机壳（卖手机壳？当时咋想的……）</p><p>5.大二重选班委会，只有老班长继续自荐班长一职，见没人竞争，我觉得好没意思，就上台擦掉了自荐的生活委员，重新自荐班长，结果居然当上了。而且还一当就是三年（当然是因为后两年没人愿意干班委了，找辅导员请辞都辞不掉。。。）做班长因为要每周上台讲话的关系，对于内向人格来可以说是相当抛头露面的事了，所以此段经历让我深刻意识到干什么岗位还是得适合自己的性格，可能由此产生了转行的念头；</p><p>6.我的第一任女友和现任老婆，在还没有确定关系的时候，都曾幻想过对方做女朋友会怎么样……（对别人还真没想过）</p><p>7.大学时期喜欢玩微博。因为一篇微博收到过陌生人赠书，交到几个原本不会有机会认识的朋友（毕业了还找人家蹭住），以及有过一段介于友情和爱情之间的羁绊（对方是一个从头到尾都没有当面见过的女生，这里就不详细说明了）</p><p>8.大三临近毕业我就决定放弃本科专业转行做程序员，没想到后来真的做到现在。</p><p>9.现在的工资是毕业第一份工资的10倍（可见当初工资有多低……）</p><p>10.认识现在的老婆是当初有别的部门过来学习，我趁着给人家看问题的功夫用人家qq加了我的qq；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.小学某次期末考试，我和坐得比较近（相互间隔一米）的两个小伙伴同时被一个从教室外扔来的木头砸到了头。&lt;/p&gt;
&lt;p&gt;2.初中我唯一一次把暗恋的女生逗笑，是当着别人的面弯腰喊她姐姐。&lt;/p&gt;
&lt;p&gt;3.高中继续暗恋初中喜欢的女生，像着迷一样把人家的空间照片打印下来放书桌旁边
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>如何编写一款跨链（币）web3钱包(1)</title>
    <link href="http://www.kuang2.cn/2023/02/20/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E4%B8%80%E6%AC%BE%E8%B7%A8%E9%93%BE%EF%BC%88%E5%B8%81%EF%BC%89web3%E9%92%B1%E5%8C%85(1)/"/>
    <id>http://www.kuang2.cn/2023/02/20/如何编写一款跨链（币）web3钱包(1)/</id>
    <published>2023-02-20T22:57:00.000Z</published>
    <updated>2024-02-07T08:30:33.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>咱们以ETH和TRON跨币钱包为例。首先你得知道币与币之间的关联和区别。关联在于它们同属以太坊这个大家庭，区别则是每个币种有属于自己的coin id（注意区分coin id、chainId和networkId，后两者基本可以等同）。</p><p>比如ETH的coin id 是60，TRX的coin id则是195。此值可用于以助记词生成钱包对象时作为path的参数。具体来说，比如etherjs的方法：ethers.Wallet.fromMnemonic(mnemonic, path)。第一个参数是助记词，第二个参数path就是EIP-44规范的密钥路径，拆分如下：</p><p>m / purpose’ / coin’ / account’ / change / address_index</p><p>举一个实例path：m/44’/60’/0’/0/0。m=m，purpose=44都是固定的。60指向ETH，account是账户索引，一般是0，change用于区分外部公开地址和内部地址，一般也是0，address_index是地址索引，一个钱包对象可以生成N个地址，官方推荐在20个以内，所以这里的值可以是0到19（对应metamask里面的功能就是add account）。</p><p>推荐一个原理文章：<a href="https://learnblockchain.cn/2018/09/28/hdwallet/#%E7%A7%98%E9%92%A5%E8%B7%AF%E5%BE%84%E5%8F%8ABIP44">https://learnblockchain.cn/2018/09/28/hdwallet/#%E7%A7%98%E9%92%A5%E8%B7%AF%E5%BE%84%E5%8F%8ABIP44</a></p><p>基于上述原理，所以可以分别生成ETH和TRON的钱包对象：</p><p>ETH钱包对象：ethers.Wallet.fromMnemonic(mnemonic, “m/44’/60’/0’/0/0”)</p><p>TRON钱包对象：ethers.Wallet.fromMnemonic(mnemonic, “m/44’/195’/0’/0/0”)</p><p>当然，基于etherjs，上述生成的ETH钱包对象可以直接使用，调用其各种方法。Tron则稍有不同，是使用官方库提供的TronWeb，实例化后使用。一般仅需用到TRON钱包对象的privateKey，用于生成address和发起交易传参。</p><h3 id="地址、账户和状态"><a href="#地址、账户和状态" class="headerlink" title="地址、账户和状态"></a>地址、账户和状态</h3><p>币种的最明显区别，应该就是address格式了。根据Tron官网所述</p><blockquote><p>TRON 地址为大写字母 T 开头的 34 字符地址，例如 T9zTTVfegCiJ5ovip4y2dCPiEdXT9EmtEw 。以太坊地址前附加字节 0x41 后执行 Base58check 操作所得</p></blockquote><p>简单来说，已知ETH address，可以推导出Tron address，反之则无法推导。</p><p>参考前文提到的path中的address_index，可知要实现主账户和子账户间的切换，只需要在生成钱包对象时传入不同的address_index值即可。比如初始账户是m/44’/195’/0’/0/0，账户2则是m/44’/195’/0’/0/1，账户3则是m/44’/195’/0’/0/2……</p><p>相比ETH只有一个address和balance的状态，Tron还有带宽、能量，经由每日官方分配可得。交易没有gas，但会消耗带宽和能量，当其不足时，会直接烧掉TRX。</p><p>另外需要注意的是，Tron初始账户需要转入1TRX才能激活使用。</p><h3 id="在币内切换网络"><a href="#在币内切换网络" class="headerlink" title="在币内切换网络"></a>在币内切换网络</h3><p>ETH中，传入rpc_url可以初始化一个provider（ethers.providers.JsonRpcProvider）。钱包对象是跨网络的，provider则是当前网络下的实例对象。provider下即有很多使用方法如getNetwork，getGasPrice，getBalance等等。</p><p>Tron中没有provider的概念，只是在实例化tronWeb对象时，传入rpc_url网络参数参数即可生成和网络关联的实例对象。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本原理&quot;&gt;&lt;a href=&quot;#基本原理&quot; class=&quot;headerlink&quot; title=&quot;基本原理&quot;&gt;&lt;/a&gt;基本原理&lt;/h3&gt;&lt;p&gt;咱们以ETH和TRON跨币钱包为例。首先你得知道币与币之间的关联和区别。关联在于它们同属以太坊这个大家庭，区别则是每个币种有
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="JS" scheme="http://www.kuang2.cn/tags/JS/"/>
    
      <category term="web3" scheme="http://www.kuang2.cn/tags/web3/"/>
    
      <category term="wallet" scheme="http://www.kuang2.cn/tags/wallet/"/>
    
  </entry>
  
  <entry>
    <title>我的师承</title>
    <link href="http://www.kuang2.cn/2022/12/26/%E6%88%91%E7%9A%84%E5%B8%88%E6%89%BF/"/>
    <id>http://www.kuang2.cn/2022/12/26/我的师承/</id>
    <published>2022-12-26T22:25:00.000Z</published>
    <updated>2024-02-07T08:30:33.104Z</updated>
    
    <content type="html"><![CDATA[<p>突然想写写我的老师们，没有更好的标题，不妨借用王小波王大师的。</p><p>我的小学是在人均质朴的农村，老师可能也不是科班出身，有些或许还兼职着家里的农田或者池塘。虽然没有足够的专业背景，人格却已足够为师。犹记得我小学三四年级时，常犯嘴唇干裂，严重时好些天不适。教语文的张老师有一次注意到了，叮嘱我：可以擦一点唇膏。</p><p>这是极细小的事，一句简单的关怀，也谈不上多大的恩情。却使我感动许久，一直记到现在。</p><p>有细心的老师，必定也有粗枝大叶的。六年级时，我成绩尚可，常常坐在前排，也因此常被老师叫着干些打杂的事情。有一次就被当时的班主任叫去帮忙倒一杯开水。受着家里独生子恩宠长大的我，也是第一次干这种活。没有经验，右手捧着茶杯，左手就提起滚烫的开水瓶往下倒，一个不留神，开水全灌手上。一时不知道疼，只是赶紧用通红的右手把打好的开水杯捧到班主任讲桌前。后来虎口长泡，撕心裂肺疼了好些个晚上才好。没跟老师说，当然也没得到丝毫问候。</p><p>初中我跟着伯伯表哥一家来到镇上，交了一大笔借读费上了镇上最好的实验中学。当时不觉得，还暗地怪罪爸妈为什么不让我跟村里的小伙伴一起去去私立学校。现在回想起来诸多细节，才无怪乎实验中学实在称得上是本地最好的初中。</p><p>第一个留下深刻印象的，就是性情极为暴躁的数学老师，姓卢。拖堂，打人，均不在话下。以至于我在语文课作文仿写的单元作业里，还特地写到当时的卢班主任：“狂吼，怒号，嘴闭，声息——记卢氏统治”。原本只是好玩，没想到被当时的语文老师惊为天人。没有告发，也不见怪罪，反倒是在课堂上称赞玩味了好一段时间。可见这老师也有一番文人风骨：宽容、有诗性。</p><p>跟着这样的老师学语文，同时还伙同另一个小伙伴一起写日记写诗，那段时间，文学特质——还谈不上天分——由此纷发膨胀，一直影响我到现在。</p><p>进入到初三时，语感渐长，好些篇作文被当做范文贴到背后黑板上。甚至包括一些充满实验性质极其唯心主义的杂感乱谈，也被初三时的语文老师一一接受——同时被善意提醒，考试可不能这样写。可惜我由此更加没有特意去学习应试作文的写法，同一时期还被萌芽、新概念所“戕害”，行文更加不着主流价值观。乃至到高中那严苛的应试氛围中，终于不见才华，只见捉襟见肘的应试技巧，没有在高考中迈上更高的台阶。</p><p>相比初中，尽管高中同样是进入了镇上最好的实验高中，却再没有碰到那样浪漫和宽容的老师。应试大棒的淫威下，只有会考的老师，而没有善教的老师。给我留下印象的，除了善使萝卜大棒和时间管理术（及时利用请假的体育课）的几个主科班主任，就只剩下那个基本上等于照本宣科的语文老师。我常常在他枯燥无味的讲书声中，翻看尚未学到的读本或文章，却还时常被呵斥不要做和本节课无关的事。</p><p>再然后就是大学。因为教学时间的关系，各学科老师总是远在天边一般，没有足够的亲密接触。反倒只有一个从入学一直陪到毕业的小班，也就是辅导员。又因为当了班委的原因，和小班成了战友般的关系。可惜小班虽然外表是个娇小可人的小女子形象，个性上却总感觉拒人于千里之外。行事古板，为人严肃，认识四年也没有到很亲密的程度。可能辅导员更像是做政治工作的定位，总要在心理上居于管理学生的高一级阶层，再加上性别有别，终究没办法打成一片。</p><p>回望这么些老师，有慈眉善目的，有寡淡如陌生人的，也有印象不堪如魔鬼的。作为一个还称不上被某老师影响一生的平庸学生，我会努力敬重那些值得敬重的，尝试忘掉那些不值得记忆的。老师总归只是一份工作，对你我而言则可以简化为一段青春期的陪伴，不必过于神话或妖魔化。至于那些由此留下的性格和人格印记，不妨去粗取精，优胜劣汰，作为前行的滋养即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;突然想写写我的老师们，没有更好的标题，不妨借用王小波王大师的。&lt;/p&gt;
&lt;p&gt;我的小学是在人均质朴的农村，老师可能也不是科班出身，有些或许还兼职着家里的农田或者池塘。虽然没有足够的专业背景，人格却已足够为师。犹记得我小学三四年级时，常犯嘴唇干裂，严重时好些天不适。教语文的张
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>《少年凯歌》：一本看不懂的历史书</title>
    <link href="http://www.kuang2.cn/2022/08/15/%E3%80%8A%E5%B0%91%E5%B9%B4%E5%87%AF%E6%AD%8C%E3%80%8B%EF%BC%9A%E4%B8%80%E6%9C%AC%E7%9C%8B%E4%B8%8D%E6%87%82%E7%9A%84%E5%8E%86%E5%8F%B2%E4%B9%A6/"/>
    <id>http://www.kuang2.cn/2022/08/15/《少年凯歌》：一本看不懂的历史书/</id>
    <published>2022-08-15T20:46:00.000Z</published>
    <updated>2024-02-07T08:30:33.096Z</updated>
    
    <content type="html"><![CDATA[<p>因为经常书荒而选书的关系，这本书曾许多次进入我的视野。但每次都被快速忽略。一方面是对于传记兴致淡淡，除非对某人突然产生极大的兴趣；另一方面是对陈凯歌其人，虽然佩服《霸王别姬》的经典，但也尚未上升到爱屋及乌的高度，尤其是对其多次在舆论场中的言行（比如06年的馒头事件）欣赏不来。相对于常年端着的大人物们，我更喜欢慈眉善目接地气的李安贾樟柯之流。</p><p>想想我的读书神器kindle买来的年岁跟我毕业的时间一样长，不说“饱读”，至少各种推荐书单也都过过一遍了。于是越来越容易陷入书荒之中。无奈之下，只得再再再一次打开豆瓣图书250，看看还有没有值得一采的遗珠。</p><p>这次终于决定来试试这本被跳过N次的《少年凯歌》。</p><p>没想到，快读过半，就不得不佩服豆瓣9.4分的水准。震撼和惊喜均超出预期。</p><p>一惊在于题材内容超出意料，原本以为偏文艺和呓语的自传，竟是特殊年代的回忆录。从少年视角回看浩劫十年，是我此前没有过的体验。</p><p>二惊则是作者文字水平远远超过我理解和猜测的作者预期。不谈也不比文学大家，平平无奇小天才却也算得上。原来粗犷的外表和深沉的导演造诣之下，还有让人惊艳的语言天分。已经很久没有让我读起来舒适的国产文字了。此前看的那些，要么是产出于民国前夹杂文言的拗口白话（汪曾祺等等），要么就是近乎口语疏于形式重在内容的当代散文小说（李娟，双雪涛等等）。</p><p>陈凯歌的语言是独一份的，达到了我心目中冯唐的水准。有古典味，但不拗口，这点难得。按豆瓣评论的说法，差点就多了一个现当代的文学大家。</p><p>当然，相比于文字，更精彩的是内容。虽然只是简单的记录和追往，但也足够“文学”，不论是从魔幻现实主义的荒谬性，还是记载真实历史的厚重感。</p><p>看过的记录文革的文字也不算少了（其实也就只有兄弟，三体，饥饿的女儿等），苦难看多了，也就不再以其为新鲜，并且下意识地避免再沉浸于那样的世界中。就像张纯如或是房思琪，仅仅只是通过文字的感受，时间久了也会让人崩溃。</p><p>然而当《少年凯歌》再拉我进那个世界时，我却没有产生应有的逆反和退却心理，可能正是源于这本书提供的旁观者视角。虽然也有作为受害者直系亲属的控诉，但更多的是冷眼旁观，在如实记录中反思，在窥视现实的同时探讨其意义。</p><p>当再一次切片时全览这段历史时，便是我的第三惊。惊于这段历史的破坏之大，浩劫之深，不仅仅是对人的戕害，对物的焚毁，更甚者则是对历史和人文的毁灭性打击。正如陈丹青所说，“两千年文脉已断”。</p><p>更让人惊起之处，是在于它的意义阙如。以往战争纷繁，但总有其背后的缘起。无论是利益的争夺，矛盾的转移，抑或只是出于宗教派系的不两立。但这十年内战（或说内乱），却只是个人权力的滥用，再经由少数集团的放大，竟然就变成了伤及害及几百上千万人的浩劫。统治者之罪，远远超出言语可堪形容。</p><p>单论这发动者，毛，说起来总是百千年一见的伟人。却能一手指天，羽扇纶巾间，几百千万人的生命就如同浪花灰飞烟灭。何其恐怖。</p><p>也许有人要反驳说伟人本意并不如此。但不得不承认派系清洗和肉体消灭正是诸多所谓马克思主义者的常用手段。看过高阳《红太阳》的人，应该都会认同这一点。在建国之前的党内历史中，毛早就使用过了类似的手段。而远在莫斯科河岸的斯姓同仁，也对此番伎俩用至乱熟。更不必谈红色高棉等等。</p><p>应该把个人的罪恶归咎于党派吗？我觉得以后世视角观之，我党与这世上万千党派并没有天堑般的差异，在后来者务实派邓公的领导下，能及时拨乱反正重回正轨，做出当下的复兴成绩，正说明党派只是一个工具，而工具的使用者才是该归咎或赞颂的主体。恰如韩姓名人所说，我党有上千万人，人群中占比已达相当部分，党绝不仅仅是那忽左忽右的既得利益团体，而其实已经成为人民的具体代表。</p><p>再说回伟人。伟人犯错还能称之为伟人吗？我表示怀疑。至少要在这称呼上加一个时间期限。虽然我们常常说，人品和成绩要区分开。但当一个人的道德相对于成就，给这个世界施加了一个无法忽略的相反作用力的时候，那道德就应该可以减灭成就。而当我们怀疑伟人的时候，却也不影响我们感怀其功德。文革之过不可估，建国之伟乃敢忘。</p><p>最好我想说的是，要反思！当人们忘切历史之际，正是历史行将重演之时。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为经常书荒而选书的关系，这本书曾许多次进入我的视野。但每次都被快速忽略。一方面是对于传记兴致淡淡，除非对某人突然产生极大的兴趣；另一方面是对陈凯歌其人，虽然佩服《霸王别姬》的经典，但也尚未上升到爱屋及乌的高度，尤其是对其多次在舆论场中的言行（比如06年的馒头事件）欣赏不来
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>什么值得买</title>
    <link href="http://www.kuang2.cn/2022/05/24/%E4%BB%80%E4%B9%88%E5%80%BC%E5%BE%97%E4%B9%B0/"/>
    <id>http://www.kuang2.cn/2022/05/24/什么值得买/</id>
    <published>2022-05-24T23:04:00.000Z</published>
    <updated>2024-02-07T08:30:33.096Z</updated>
    
    <content type="html"><![CDATA[<p>带娃一年多，完整的娱乐时间几乎没有，只剩下无数零碎的休闲，也就是玩手机。</p><p>老实说手机上也没那么多可玩的，微博刷一圈，知乎刷一圈，抖音刷一圈，就没了，投入了时间，得到的只有空虚。</p><p>最近一两年超过一半的零碎时间则又被一个新app占据。什么值得买。</p><p>没想到薅羊毛也能成为一种乐趣。这是年轻时的我想象不到的。于是不知道什么时候开始，我的快递变得跟家里媳妇一样多起来。尽是些几块几毛钱的玩意儿：纸巾，垃圾袋，usd线……从羊毛癖又发展出囤积癖。</p><p>贪便宜，人之天性。读书破万卷者如我，也没逃过这基因的桎梏。</p><p>抛开“贪便宜”这难听的说法，薅羊毛本身倒是件挺百利而无一害的活动。打发了时间的同时不害人害己，以微毫不计的成本获得足够的乐趣，真是性价比极高的娱乐。兼之还能不耽误带娃正事，更是难得。相比之下，逛街，旅游，看电影种种，不是费时，就是费力，甚至费钱，还和所有正经事有天然冲突，已经无法再容于我们这些有娃家庭。</p><p>先有娃再有其他，带好娃了再谈自己。这是养育者的信仰，也是逃不脱的宿命。</p><p>当然在羊毛之外，购物本身是有乐趣的，这乐趣来自于物质主义。有新东西的新鲜感刺激，也有因为生活舒适度提升而带来的幸福感。女人喜欢买衣服，化妆品等带来美的东西，男人则热衷数码产品，电子设备，受制于这些机械装置的掌控欲。殊途同归。</p><p>犹记得高四复读时期，除了有个智能机为伴。第二大的乐趣就是考虑下一部手机换什么型号。为此考虑了一整年。每到周末如果去上网，一定要打开中关村在线或者手机中国，看一圈评测，掂量下预算，隔着屏幕感受一下下部手机带给我的新鲜功能。</p><p>还没买的东西比已入手的东西的优势在于，目标可以随时更换。今天是A款，明天是B款。这次分析了A款的优势，下次又感受到B款的魅力，它不再是已经到手的那个优劣分明的具体产品，而成了可以随着心情变更的虚拟完美物。没到手的东西，才是最让人魂牵梦萦的。</p><p>一年下来，我也渐渐悟到此真理。于是在大学入学时，压根没有践行换机的决定，而是选择继续与旧手机为伴。这样看来似乎做了一整年的白日梦。但做梦也是一种娱乐不是么。梦境成真也不见得是梦最好的归宿。</p><p>现在回想起来，什么时候购物成了我实实在在的娱乐呢？肯定不是小学、中学时期，那时候头寸紧张，毫无经济自由，买本书都要被唠叨（甚至离家出走）；也不是脱离亲友的大学时期，有了图书馆，在精神欲望刚刚满足，物质欲望还未疯涨的时期，购物只意味着坐很远的公交去市中心，逛一圈买不起的店铺，晕车，折腾，费时费力；更不是毕业初期那交房租都捉襟见肘的头几年，一时兴起给人送礼物，都是捡几块十几块的网红产品。</p><p>那是现在么？也只能是现在了，也就是往前推不超过三四年的样子。跳槽N次才换回了一点体面的工资，可惜刚刚有了享受的条件，又坠入婚姻养娃的泥沼。有贼心而没贼胆，钱包见丰，但也只能留待未来，投资养育、教育和预防不可预测的变故。所以我实际上说的购物，也就是以羊毛为主，刚需为辅。</p><p>再说说刚需。如果是切实需要的东西，现在再考虑起预算来，当然要比几年前更充裕。虽然我仍然选择了比较低的档位。比如手机，不到一千五的非主流品牌，倒也性价比无敌；比如电脑，也有两台。台式是之前工作散伙后二手价入的工作机，不到三千。当时刚想要的是另一款小型机，盒子大小，不占地，正适合咱这小户型，然而报价比后来买的这款高出一千块，也就打消了此念头，老老实实用大部头机器。笔记本是前年618独自选的联想性价比系列小新牌，不到四千。当时想着台式性能比较高了，笔记本选个性能够用的就行。后来则每每略有后悔，但也当主力工作机用了一两年。</p><p>就刚需来说，一步到位其实才是性价比最高的方案。然而心思活络如我，并不喜欢那种一个手机（就算是iPhone）用好几年的感觉。没意思，容易腻。所以宁愿搞个千元机，用个一年半载，就可以对着下一部手机蠢蠢欲动，然后观望半年，分析比较半年，最后实际也是两年多才换新。可谓之另一种节俭。</p><p>上车张大妈几年，才明白购物的快乐不在于物品的贵重程度，当然也不限于等待快递，拆开包裹的一瞬间。时常购得的几块钱的小物品也让能让人喜欢，有些做工精细而美观（就算是几块钱）的物品，就算是闲置，摆在桌子一角，每每看到也能让人愉悦。</p><p>购物的快乐，本质是物质文明的外延。没有对物质的欲望，物质文明也就无立足之基。并且因为新鲜的发明而增加的幸福感，也不该一股脑被归为智商税的范畴，而是切实可察可感的。</p><p>总而言之呢。我想说的是，购物不丢人。多多花钱吧，为个人增添幸福感，为国家拉动内需，为物质文明添砖加瓦。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;带娃一年多，完整的娱乐时间几乎没有，只剩下无数零碎的休闲，也就是玩手机。&lt;/p&gt;
&lt;p&gt;老实说手机上也没那么多可玩的，微博刷一圈，知乎刷一圈，抖音刷一圈，就没了，投入了时间，得到的只有空虚。&lt;/p&gt;
&lt;p&gt;最近一两年超过一半的零碎时间则又被一个新app占据。什么值得买。&lt;/
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>站立办公的探索</title>
    <link href="http://www.kuang2.cn/2022/02/28/%E7%AB%99%E7%AB%8B%E5%8A%9E%E5%85%AC%E7%9A%84%E6%8E%A2%E7%B4%A2/"/>
    <id>http://www.kuang2.cn/2022/02/28/站立办公的探索/</id>
    <published>2022-02-28T22:25:00.000Z</published>
    <updated>2024-02-07T08:30:33.108Z</updated>
    
    <content type="html"><![CDATA[<p>网上都说人到中年一身病，我却是人还没入职场，职业病就接踵而至。</p><p>第一份公司时就发现了干眼症；到半年后第二份工作时，大概因为出租屋没有配桌椅，腰痛开始时隐时现，第二天赶紧花最便宜的价格整个一套桌椅——还是手动打造的“珍品”：一块板子加上支撑杆，再从超市弄个十块钱的塑料凳。</p><p>正式工作第一年，腕管综合征的病症愈发明显。在研究了各种造型的鼠标、鼠标垫后，不得已学会了左手用鼠标。还好换手操作效果拔群，否则行业生命恐怕早早夭折。</p><p>到工作第二年的冬天，又轮到干眼症加重，甚至为此跑了一趟眼科医院，神奇地在太阳穴挨了一针。一度产生换行的想法。幸运的是又接触到热敷眼罩，干燥的空调房内还有加湿器救命，才没有再挨第二针。</p><p>虽然入行不久就各种病痛折磨，还好依然扛了下来。最让我无法再去考虑转行的，是朋友R的一句话，有病就治，有问题就解决。是的，病痛只是一时，并不会危及生命。有问题就应该解决，逃避调转车头只会换一个地方再碰壁。</p><p>于是就这样坚持至今，倒也已经逆来顺受。羡慕不了那些工作多年却毫无不适的神奇体质，脆弱如我能有今日稳定且在水平线以上的工作生活也算圆满。虽然病重依旧。</p><p>最后发现最能困扰身心，并且最影响工作效率的是腰痛。白天坐如针毡，晚上则翻来覆去，酸痛到无法入睡。</p><p>就像当年努力想办法克服干眼症一样，我也是想尽办法。</p><p>刚开始试着研究坐姿。尽可能地挺直腰背，视线平直，却发现除了加重强迫症的痛苦，并没有什么卵用。至于网上说千万不要跷二郎腿，我却发现翘腿反倒能略微加长单次坐的时间。可能是重心靠后略微放松腰部的原因。</p><p>以及研究各种椅子。虽然有了解到人体工学椅之类，却也没有真的花钱去尝试。动辄上千块的价格，也只能换来一次实验性的结论，性价比实在不高。椅子再神奇，也就是造型差异，改变不了久坐伤腰的本质。</p><p>最被推荐并且想来就知道一定有效的，当然就是站立办公了。可惜早几年“站立办公”的概念还不普及，徒然整一个桌上桌站着用电脑，有点鹤立鸡群的味道。后来公司来了个上年纪的同事，很自然地整上了站立式电脑桌。倒是给我一个感悟：其实没人在乎你那奇异的姿势，大家都很忙，能按时交付成果才是职场真谛。</p><p>于是在后一份工作时，也专门带了桌上桌，等到加班时间坐不住了就拿出来摆上。效果也还不错。其实在家里早就摆了两台显示器，一个站着用一个坐着用。而在办公室统一用笔记本，也方便搬上搬下。</p><p>这就是我站立办公的第一阶段了。笔记本+床上桌，二十来块钱的方案。</p><p>中间疫情突发，意外在老家滞留三个多月。居家办公两个多月，也是得亏找到个电脑桌架在原来的桌子上。站累了干脆就趴在床上干活。</p><p>短暂而美好的居家办公生活结束后，找工作本身远不及新办公室工作的站立办公问题更能困扰我。尤其是去大厂——只能说是相比以前待的小厂，迷你厂更大的——后，在上百人共呼吸的陌生环境，恐怕不太好意思架一个桌上桌搞得太独树一帜。</p><p>又一次幸运的是，最后选择接受前前同事大哥的邀请，来到他几个人的办公室。既然是熟人，也就不必太多虑。唯一的问题是再接受福利般的双显示器后，原本就不宽敞的办公桌更显拥挤，再架台上桌怕是要把两块27寸的显示器挤到地上去。经过多个电商平台的浏览查找研究分析，终于让我找到第二种解决方案：落地支架笔记本桌。</p><p style="text-align:center;"><img src="/images/多宝莱站立办公桌.jpg" style="width:35%" title="多宝莱站立办公桌" alt="多宝莱站立办公桌"/></p><p>其前身貌似是做直播的支架副产品，换上600mm长的木板刚好能做笔记本桌面。而且这样能给我续命的好东西，竟然只要几十块钱——不过我选择继续发扬羊毛党本色，在海鲜市场淘了个二手。最后四五十块钱就解决了问题。唯一美中不足的是不能快速切换站坐姿态。每次还得台式机保存提交，开笔记本，再拉取更新，微信、浏览器各种软件都得重登。</p><p>于是继续探索其他性价比方案。目前的考虑是增加一块便携屏，架到站立位置，连上HDMI切换器，可以实现一键切换站坐。问题是如果为了性价比去买一块小商家DIY的便携屏，是否能经受那些网上在售的夹屏工具的持久“夹击”。并且显示器总要连视频输入和电源两根线，对于目前的小桌面也是一大考验。</p><p>最近发现并快速实施的方案是：台上显示器增高架。本质上是普通显示器增高架的升级版，只是将高度拉伸到站立的可视范围。不过配合床上桌，换掉家里的垃圾桶+垫书，也是一大优化项了。</p><p style="text-align:center;"><img src="/images/显示器增高架.jpg" style="width:35%" title="显示器增高架" alt="显示器增高架"/></p><p>网上虽然有各种或高级或极具性价比的升降电脑桌，我却自认为已将自身需求满足到极致（受限于已有条件）：或者追求双大屏办公，只能配合笔记本做站立方案；或者实现了一键切换姿态，只是牺牲了更大空间，没法兼容双屏。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网上都说人到中年一身病，我却是人还没入职场，职业病就接踵而至。&lt;/p&gt;
&lt;p&gt;第一份公司时就发现了干眼症；到半年后第二份工作时，大概因为出租屋没有配桌椅，腰痛开始时隐时现，第二天赶紧花最便宜的价格整个一套桌椅——还是手动打造的“珍品”：一块板子加上支撑杆，再从超市弄个十块钱
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>结束不了的疫情及其他</title>
    <link href="http://www.kuang2.cn/2022/02/24/%E7%BB%93%E6%9D%9F%E4%B8%8D%E4%BA%86%E7%9A%84%E7%96%AB%E6%83%85%E5%8F%8A%E5%85%B6%E4%BB%96/"/>
    <id>http://www.kuang2.cn/2022/02/24/结束不了的疫情及其他/</id>
    <published>2022-02-24T23:12:00.000Z</published>
    <updated>2024-02-07T08:30:33.108Z</updated>
    
    <content type="html"><![CDATA[<p>这两天又有一波疫情席卷而来，就像两年前那样的“幸运”，不偏不倚，又是近在咫尺，从办公隔壁的小区，到住处隔壁的小区，再到小区旁边几栋的单元……</p><p>可惜经过两年洗礼，不该习惯的也习惯了。放眼望去全球大势，我们国家总归自身难保。除非能像隔壁闭关锁国，否则清零政策迟早无以为继。所以不如放平心态，只做这苟且又谨慎的准备即好。</p><p>以前总想着未来会如何如何，却怎么也无法预料到有如此宏大的“黑天鹅事件”，裹挟全部人类，无处可逃。不幸患病甚至病重而亡固然可怜可悲，更让人感觉悲伤的是看不到结束，没有任何可能恢复到以往的生活——那常常被厌弃如今却分外怀念的平常生活。</p><p>幸运的是就我们一家而言，从工作收入上，因为行业原因，没有遭受明显打击。影响主要还是生活的不便，诸如户外活动减少，戴口罩加重鼻炎，不得不打消各种出游的计划等等。当然我也深知那遭受更大厄运的千千万万人们，因为收入减少，健康失去，从而直接或间接降低了整个社会的幸福熵值，受其波动传导，最终也影响到我们这一家自身——或者是经济的衰退，或者是风气的改变，等等。</p><p>出门必戴口罩，若有似无的消毒水味，隔三差五的疫苗接种和核酸检测……在像我家宝宝这样的疫情后一代以后看来，会不会就是生活的一部分呢？却无法想象没有这些的日子是什么样。</p><p>可以想象，对于大多数没有遭遇病毒的多数人（中国的多数，国外的少数），在工作生活影响之外，最大的变化就是聚会少了，活动少了。那些没来由同时也没意义的公司聚餐终于消停，同时和朋友同事的约会活动也屈指可数。影院票房骤减，餐馆远不如彼时红火，KTV 更是萧条到变成夕阳产业——当然这些也可能跟我周边的同龄人都进入已婚已育状态有关，简言之就是带娃比疫情更能缩减一个人的社交娱乐生活。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这两天又有一波疫情席卷而来，就像两年前那样的“幸运”，不偏不倚，又是近在咫尺，从办公隔壁的小区，到住处隔壁的小区，再到小区旁边几栋的单元……&lt;/p&gt;
&lt;p&gt;可惜经过两年洗礼，不该习惯的也习惯了。放眼望去全球大势，我们国家总归自身难保。除非能像隔壁闭关锁国，否则清零政策迟早无
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>2021年终总结</title>
    <link href="http://www.kuang2.cn/2021/12/31/2021%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://www.kuang2.cn/2021/12/31/2021年终总结/</id>
    <published>2021-12-31T23:11:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<p>打开美团的年度报告，看到都是最近点的外卖，才恍然意识到这一年的大部分时间又是在家度过的。</p><p>一定是神奇的运气，让我每次的工作都没有更忙，只有更闲。第一份正式的IT工作就是标准的朝九晚五，尽管同组别的同事都默默跟着领导加班，我却像个没事人一样到点就走——被另一部门的哥们教唆着下班。就这样也没有被同事嫉妒、领导嫉恨，每次年终照发，申请离职时还被热情挽留了一番。可惜这温水煮青蛙的日子是最危险的。如同《暗时间》作者刘未鹏所说，困难的日子越过越容易，简单的生活越过越难。应该庆幸自己的离开没有太晚。</p><p>之后碰到一个号称不加班实际却加班像加饭的所谓外企，呆了几天果断跑路了。结果去了另一家依然是加加加，第一个星期就肝到了凌晨四点。还好所有加班都有调休，同事也还nice，坚持呆了一段却遭遇搬新家的甲醛攻击。生命健康总是第一位的，给资本家打工又不是给资本家卖命，再次果断选择跑路。然后误打误撞遇见了现在的同事所在的项目组，依然是标准的朝九晚五还有固定奖金，可惜好景不长又没坚持多久。</p><p>然后就是上一份工作，依然号称不加班却在入职一周开始九九六。原本以为这样的日子就是未来不抱指望的日常，没想到被疫情这只黑天鹅改变了。从春节在家时期的减薪（结果老板良心尚存没真减），到刚回办公室一个月就被宣布办公室不再续租，武汉团队全部居家办公。</p><p>可以预见，没有办公室的团队最终结果就是走向解散。果然不到几个月，十来人的队伍就走了一大半，没想到的是我成了最后的“留守儿”。在顽强地多挺了一年多之后，竟然还能领到全额的赔偿金，这让第一次拿N+1的我只能感叹命运待我不薄。毕竟舒舒服服睡到自然醒的居家办公生活也算是可遇不可求。</p><p>然后就是现在的工作了。这也正是今年发生的事情，从浑浑噩噩既忙碌（工作之余还要帮带娃）又悠哉（最后几个月基本没啥事做），到疯狂投简历连轴转地面试，有失望也有希望，到尘埃落定接受前同事大哥的邀请，在收入增长的同时还能继续保证朝九晚五每晚陪娃遛弯的日子，不感谢生活难道还感谢上帝吗。</p><p>如今工作之后的生活，基本就是被带娃占据了。居家办公时还能在摸鱼时趴着休息腰之余看看书，最近出门上班，通勤又去了一笔时间，加上娃还越睡越晚，最近都到十点半之后了，“只能”睡前刷刷抖音看看电影解说。</p><p>只能感叹单身没娃时的业余时间没有得到足够的珍惜，不懂得精彩的生活源于何处，如今困于亲子之乐的围城，只能在手机和书本里感受世界的缤纷。</p><p>当然，手机是越看越多，书则越翻越少。有所耳闻的都一一翻阅，其中一小半意犹未尽，被留在记忆深处——等同于隔天就忘，一大半止步第一章，实在是味同嚼蜡——没有考试要应付的阅读痛苦，都没有经受的必要。想到这点，果断合卷、返回、删除书籍。书毕竟都下的免费的，时间却不是。刷刷张同学他不香吗。</p><p>今年留有印象的，是年头看了几本科幻，以《大师的盛宴》为指引，领略了下国外科幻大师的水平。大师虽多，能让我赞叹的只有乔治马丁。《沙王》短短几万字，却让人冷汗直下，像观赏了一部两小时的恐怖电影。</p><p>4月份难得出差去了公司本部，看了60岁学认字的姜淑梅75岁才写成的回忆录<br>《乱时候，穷时候》。真是好书，足够真实，真实才有雷霆万钧般的力量。看了此书，不会再有人向往旧时代的好。那是吃人的时代。</p><p>接着看了挺不错的绝叫、项塔兰，秋天开始入手了一批推理小说，知道了几个蛮有水平的推理作家——也知道了几个名不副实的。</p><p>年末的惊喜来自于《挽救计划》。有震撼又有感动，既有宏大叙事又间杂着温暖人情，这是比之前看《三体》还要不一样的体验。我愿意推荐它一万次。</p><p>以上这些，当然都截止到换工作之前。出门工作之后，进了一个此前从未接触的行业，学习颇多，时有加班，收获丰富，时间渐少，一个转眼就是2022。回顾旧的一年，更多的是顺遂和幸运，希望新的一年，也不辜负期望。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开美团的年度报告，看到都是最近点的外卖，才恍然意识到这一年的大部分时间又是在家度过的。&lt;/p&gt;
&lt;p&gt;一定是神奇的运气，让我每次的工作都没有更忙，只有更闲。第一份正式的IT工作就是标准的朝九晚五，尽管同组别的同事都默默跟着领导加班，我却像个没事人一样到点就走——被另一部门
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>快读推理小说</title>
    <link href="http://www.kuang2.cn/2021/09/30/%E5%BF%AB%E8%AF%BB%E6%8E%A8%E7%90%86%E5%B0%8F%E8%AF%B4/"/>
    <id>http://www.kuang2.cn/2021/09/30/快读推理小说/</id>
    <published>2021-09-30T20:03:00.000Z</published>
    <updated>2024-02-07T08:30:33.100Z</updated>
    
    <content type="html"><![CDATA[<p>最近接连读了好些本推理/悬疑小说。本来是对着豆瓣评分上的车，平均不低于 7.5，但实际感受却是天差地别。下面详细说说。</p><p>《体育馆杀人事件》青崎有吾。氛围渲染和故事推进的很棒，主角做的嫌疑人排除是最大亮点，排除某些睁眼瞎的 bug，也算是我见过最严密的推理了，尤其是末尾叙诡的不在场证明排除那段。结局则有点失望，还以为是啥精巧的设计，结果就这？动机还行。人物塑造糟糕。</p><p>《字母表谜案》大山诚一郎。看完第一篇想吐……第一次被豆瓣评分骗出内伤。后经网友提示说最后一篇才是神作，于是耐着性子把那极度煽情又冗长的故事看完了。诡计设计还行吧。但也就接近近几年大部分伪高分国产悬疑剧的水准。结果凶手的指认再一次差点把我肝出大出血。</p><p>《Y 的悲剧》埃勒里·奎因。古典推理大师的作品。在氛围渲染上有阿加莎（《无人生还》）的风范。极具年代感下的各种人物也很有意思。故事给人的爽感能到 80 分，扣掉的 20 分要怪凶手和动机。给人的感觉就是好像是挺悲剧的，但没太明白到底悲剧在哪。性格 or 疾病？就当遗传神经质吧。</p><p>《一场事先张扬的凶杀案》马尔克斯。当然不算推理，但读起来很爽，毕竟是世界级纯文学大师，二流子推理门类不能比的。很短的一件事写成各种视角下的长篇，如此简单的故事还能经过一层层的递进，考虑到人物不多， 没有太大的人名记忆负担，总体体验可以超过大师的另两篇名著《百年孤独》和《霍乱时期的爱情》。缺点是角色的感情线，莫名其妙没头没尾，跟《霍乱》的死脑筋一脉相承吧。</p><p>《三口棺材》狄克森·卡尔。诡计设计最好的一本。经历过多年柯南熏陶，其实也能轻松猜到一半以上的答案。但还是被剩余的谜底惊艳到了。缺点是主角侦探的人物塑造，给人一种很玄乎的感觉。三个人的奇怪组合导致废话多了很多。</p><p>《七个证人》西村京太郎。同样日本人的作品。应该分类为本格推理，但实际感觉同样是本格过度了。换句话说就是老子只讲解谜，线索证据啥的统统当不存在。具体到这本，前半段总是一副云里雾里的主角侦探，到后半段突然柯南附身，一下子就把案子梭哈了。智商值之暴涨让人莫名其妙。布局和动机倒是亮点。</p><p>《火之幻影》陈舜臣。莫名眼熟的一个作者。这本书被作者称之为“最得意”，看了前半段得出结论是这作者也就网文水平。后半段开始发力，连续反转让人眼花缭乱，至少这“得意”是保住了。结局稍弱。总体能到豆瓣 8.5 以上。</p><p>《犹大之窗》狄克森·卡尔。三口棺材同作者。气氛渲染的风格类似。故事讲述则完全不同——把剧情完全放在法庭的辩论席上，给人的感觉就是线索和推理递进很严密。缺点是在密室里用了机关，个人感觉这样就违背密室诡计的初衷了。差评。总体上还算是作者高水准的一篇。</p><p>《解体诸因》西泽保彦。没看完。短篇集。剧情完全就是字面意思，分尸的各种原因（这样一说起名还挺文艺）。诡计在水平线以上吧。同样是日本作家作风的只管解谜不讲证据和线索的迷之推理。因为每篇都差不多就没兴趣看完了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近接连读了好些本推理/悬疑小说。本来是对着豆瓣评分上的车，平均不低于 7.5，但实际感受却是天差地别。下面详细说说。&lt;/p&gt;
&lt;p&gt;《体育馆杀人事件》青崎有吾。氛围渲染和故事推进的很棒，主角做的嫌疑人排除是最大亮点，排除某些睁眼瞎的 bug，也算是我见过最严密的推理了，尤
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>重读react官方文档</title>
    <link href="http://www.kuang2.cn/2021/09/05/%E9%87%8D%E8%AF%BBreact%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
    <id>http://www.kuang2.cn/2021/09/05/重读react官方文档/</id>
    <published>2021-09-05T10:58:00.000Z</published>
    <updated>2024-02-07T08:30:33.108Z</updated>
    
    <content type="html"><![CDATA[<p>最近重读了一遍 <a href="https://zh-hans.reactjs.org/docs/forwarding-refs.html">react官方文档中文版</a>，又得了些读书笔记：</p><h3 id="1-ref的使用注意事项"><a href="#1-ref的使用注意事项" class="headerlink" title="1.ref的使用注意事项"></a>1.ref的使用注意事项</h3><ul><li>只能用在dom节点和class组件上，如果要用在function组件，使用React. forwardRef暴露给父组件（ref转发，forward向前的意思）并在useImperativeHandle中定义父组件可调用的子组件方法</li></ul><h3 id="2-lt-gt-lt-gt-插入key"><a href="#2-lt-gt-lt-gt-插入key" class="headerlink" title="2.&lt;&gt;&lt;/&gt;插入key"></a>2.&lt;&gt;&lt;/&gt;插入key</h3><p>&lt;&gt;&lt;/&gt;实际上是&lt;React.Fragment&gt;的简写模式，所以当要增加key时，可以这些写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;props.<span class="property">items</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (</span><br><span class="line">     <span class="comment">// 没有`key`，React 会发出一个关键警告</span></span><br><span class="line">     <span class="language-xml"><span class="tag">&lt;<span class="name">React.Fragment</span> <span class="attr">key</span>=<span class="string">&#123;item.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>&#123;item.term&#125;<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>&#123;item.description&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;/<span class="name">React.Fragment</span>&gt;</span></span></span><br><span class="line">))&#125;</span><br></pre></td></tr></table></figure><p>key属性是React.Fragment唯一支持的属性</p><h3 id="3-不要在render中使用HOC（高阶组件）"><a href="#3-不要在render中使用HOC（高阶组件）" class="headerlink" title="3.不要在render中使用HOC（高阶组件）"></a>3.不要在render中使用HOC（高阶组件）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 每次调用 render 函数都会创建一个新的 EnhancedComponent</span></span><br><span class="line">  <span class="comment">// EnhancedComponent1 !== EnhancedComponent2</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">EnhancedComponent</span> = <span class="title function_">enhance</span>(<span class="title class_">MyComponent</span>);</span><br><span class="line">  <span class="comment">// 这将导致子树每次渲染都会进行卸载，和重新挂载的操作！</span></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">EnhancedComponent</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似于在render中重新定义组件的问题都要注意</p><h3 id="4-如果useState的初始state需要经过复杂计算得到，可以使用setState-func"><a href="#4-如果useState的初始state需要经过复杂计算得到，可以使用setState-func" class="headerlink" title="4.如果useState的初始state需要经过复杂计算得到，可以使用setState(func)"></a>4.如果useState的初始state需要经过复杂计算得到，可以使用setState(func)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [state, setState] = <span class="title function_">useState</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> initialState = <span class="title function_">someExpensiveComputation</span>(props);</span><br><span class="line">  <span class="keyword">return</span> initialState;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>此函数只会在初始渲染时执行一次</p><h3 id="5-useEffect的执行时间"><a href="#5-useEffect的执行时间" class="headerlink" title="5.useEffect的执行时间"></a>5.useEffect的执行时间</h3><p>默认情况下，useEffect包裹的函数，将在每轮渲染结束后执行（一个延迟事件中被调用）；</p><p>如果想要在绘制前执行，请使用 useLayoutEffect</p><p>return的清除函数，会在执行下一个effect之前</p><h3 id="6-useEffect的注意事项"><a href="#6-useEffect的注意事项" class="headerlink" title="6.useEffect的注意事项"></a>6.useEffect的注意事项</h3><ul><li>尽量在useEffect中声明会调用的函数，而不是调用外部函数，因为这样容易以为没有用到某些props或state，而没有声明必要的依赖数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Example</span>(<span class="params">&#123; someProp &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">doSomething</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(someProp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">doSomething</span>();</span><br><span class="line">  &#125;, []); <span class="comment">// 🔴 这样不安全（它调用的 `doSomething` 函数使用了 `someProp`）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Example</span>(<span class="params">&#123; someProp &#125;</span>) &#123;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">doSomething</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(someProp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">doSomething</span>();</span><br><span class="line">  &#125;, [someProp]); <span class="comment">// ✅ 安全（我们的 effect 仅用到了 `someProp`）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>处理组件卸载后请求响应回调的setData引发的报错</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> ignore = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchData</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(<span class="string">&#x27;https://hn.algolia.com/api/v1/search?query=&#x27;</span> + query);</span><br><span class="line">      <span class="keyword">if</span> (!ignore) <span class="title function_">setData</span>(result.<span class="property">data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fetchData</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123; ignore = <span class="literal">true</span>; &#125;</span><br><span class="line">&#125;, [query]);</span><br></pre></td></tr></table></figure><h3 id="7-使用reducer处理深度的props回调函数传递"><a href="#7-使用reducer处理深度的props回调函数传递" class="headerlink" title="7.使用reducer处理深度的props回调函数传递"></a>7.使用reducer处理深度的props回调函数传递</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">TodosDispatch</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TodosApp</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 提示：`dispatch` 不会在重新渲染之间变化</span></span><br><span class="line">  <span class="keyword">const</span> [todos, dispatch] = <span class="title function_">useReducer</span>(todosReducer);</span><br><span class="line">  <span class="comment">// 内部组件树里的任何子节点都可以使用 dispatch 函数来向上传递 actions 到 TodosApp</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">TodosDispatch.Provider</span> <span class="attr">value</span>=<span class="string">&#123;dispatch&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">DeepTree</span> <span class="attr">todos</span>=<span class="string">&#123;todos&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">TodosDispatch.Provider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-useRef和createRef的区别"><a href="#8-useRef和createRef的区别" class="headerlink" title="8.useRef和createRef的区别"></a>8.useRef和createRef的区别</h3><p>定义区别：useRef相当于this，是一个容器，用于存放任意变量；createRef专用于dom的引用</p><p>使用区别：createRef用于class组件获取dom，放在构造函数中只执行一次，如果放在函数组建中会每次render执行</p><p>本质区别：createRef 每次渲染都会返回一个新的引用，而 useRef 每次都会返回相同的引用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [renderIndex, setRenderIndex] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">const</span> refFromUseRef = <span class="title class_">React</span>.<span class="title function_">useRef</span>();</span><br><span class="line">  <span class="keyword">const</span> refFromCreateRef = <span class="title function_">createRef</span>(); <span class="comment">// 每次render重新返回新的引用</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!refFromUseRef.<span class="property">current</span>) &#123;</span><br><span class="line">    <span class="comment">// 第一次初始化之后，就不再进入判断，所以这个值停留在1</span></span><br><span class="line">    refFromUseRef.<span class="property">current</span> = renderIndex;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!refFromCreateRef.<span class="property">current</span>) &#123;</span><br><span class="line">    <span class="comment">// 每次render都重新进来，所以这个值一直跟随renderIndex更新</span></span><br><span class="line">    refFromCreateRef.<span class="property">current</span> = renderIndex;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Current render index: &#123;renderIndex&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>refFromUseRef<span class="tag">&lt;/<span class="name">b</span>&gt;</span> value: &#123;refFromUseRef.current&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">b</span>&gt;</span>refFromCreateRef<span class="tag">&lt;/<span class="name">b</span>&gt;</span> value:&#123;refFromCreateRef.current&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setRenderIndex(prev =&gt; prev + 1)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        Cause re-render</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>使用技巧1：使用useRef显示上一个值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> [count, setCount] = <span class="title function_">useState</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> preCountUseRef = <span class="title function_">useRef</span>();</span><br><span class="line">    <span class="comment">// 为什么保存的是上一个值：因为useEffect是渲染之后执行，而useRef的修改不会触发render</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        preCountUseRef.<span class="property">current</span> = count;</span><br><span class="line">    &#125;); <span class="comment">// 没有第二个参数，则每次render之后都执行</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>preCount: &#123;preCountUseRef.current&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You clicked &#123;count&#125; times<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span>=&gt;</span>setCount(count+1)&#125;&gt;Click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用技巧2：封装成自定义hook：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">usePrevious</span> = state =&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> ref = <span class="title function_">useRef</span>();</span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        ref.<span class="property">current</span> = state;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> ref.<span class="property">current</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用自定义hook</span></span><br><span class="line"><span class="keyword">const</span> preCount = <span class="title function_">usePrevious</span>(count);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近重读了一遍 &lt;a href=&quot;https://zh-hans.reactjs.org/docs/forwarding-refs.html&quot;&gt;react官方文档中文版&lt;/a&gt;，又得了些读书笔记：&lt;/p&gt;
&lt;h3 id=&quot;1-ref的使用注意事项&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JS JS基础 React" scheme="http://www.kuang2.cn/tags/JS-JS%E5%9F%BA%E7%A1%80-React/"/>
    
  </entry>
  
  <entry>
    <title>如何拯救一岁宝宝的精神生活</title>
    <link href="http://www.kuang2.cn/2021/08/26/%E5%A6%82%E4%BD%95%E6%8B%AF%E6%95%91%E4%B8%80%E5%B2%81%E5%AE%9D%E5%AE%9D%E7%9A%84%E7%B2%BE%E7%A5%9E%E7%94%9F%E6%B4%BB/"/>
    <id>http://www.kuang2.cn/2021/08/26/如何拯救一岁宝宝的精神生活/</id>
    <published>2021-08-26T20:11:00.000Z</published>
    <updated>2024-02-07T08:30:33.100Z</updated>
    
    <content type="html"><![CDATA[<p>宝宝一岁以后，吃和睡逐渐规律，空闲时间反倒多了起来。</p><p>在把每个房间每张抽屉清点倒腾一番之后，失去了对这个九十平小屋的探索兴趣，只能像遛狗一样每天带出去溜达几圈。然而疫情反复，活动大受限制；天空也不争气，打开天气预报，常常一整排的雨水播报。无奈之下，还是得加强玩具装备的补充。</p><p>考虑到该年龄段短暂如流星的注意力，我优先考虑的是低价、大量的玩具购买策略。开上两个拼爹爹月卡，每周一张五毛无门槛券，应该差强人意了吧？经过这样几个月的玩具选购经历，对于玩具的采买和孩子的兴趣才终于有了一个基本的把握。</p><p>先说说我家最“高寿”的玩具，就是孩子爷爷在大半岁的时候就“高价”买入的两个电动小玩意。一个是按下能发声的小电话，一个是拨动开关就开始疯狂翻跟头的小猴。起码服役了大半年。</p><p>这两货昭示着一个玩具界的真理：宜动不宜静。这是我在后来又购入一堆玩意儿才领悟到的。</p><p>在宝宝开始会走之后，我首先购入的是小球和发条玩具。在不太会走的时候，第一次看到拧上发条就一蹦一蹦往前走的小恐龙，宝宝眼睛都要发光了。至于小球，则是整天价的在屋子里扔来扔去，五个小的，五个大的，再加上别处淘来的乒乓球等等，结果都扔得不知所踪。</p><p>接着迷上了推车，一会推自己坐的小推车，一会推家里的凳子椅子，还有继承自表哥家的学步车。后来以12块钱极高的性价比买了一只小鸭子推车，玩得不亦乐乎。几个月下来，依然还是最喜欢玩具排行榜头几名。后来买了个能装水果蔬菜模型的篮子推车，也是经常在家里推来推去。</p><p>宝宝在同龄孩子里走得早，好动，关键是腿有劲。也难怪她爱玩球，又爱推车。只要走起来，跑起来，动起来，她就可以乐呵一整天。真是所谓“屁颠屁颠”。</p><p>一个特例是玩具车。不管是惯性一推就跑老远的，还是回力往后拉放手就能冲出去的，或者可以变形翻转的，都不感兴趣。唯一玩过几次的一个小摩托车，仅仅是因为上面有个按钮一按就会发声发光。似乎车车（静态玩具车）真的可以作为区分男宝和女宝的鉴定神器。</p><p>然后买了迷你图书。九块九五十本，每本不到十页的内容。虽然还不会说话，却出乎意料地吸引了不少注意力。在被动接受地“教育”了几次之后，竟然还经常主动拿起几本推给你，意思是让你讲。讲到喜欢之处（前提是讲得抑扬顿挫，必要时候模仿下故事里面的动物语气），竟然手舞足蹈，乐不可支。时间长了还有挑有捡，只愿意反复看喜欢的那几本。</p><p>可惜纸做的书不比塑料，经不起折腾，没多久就掉的掉，破的破。接着我又试着买了硬壳的洞洞书，借了楼下表哥孩子的绘本，又充实了一阵子。可惜就像一阵风过，最近也不爱看了。倒是买的一本表哥家同款的发声书，每天都要打开往上面乱按一回。兴趣点也简单直白，只看动物、水果和音乐。</p><p>尤其是音乐。音乐对于我家宝宝就像精神生活的刚需，是上瘾一般的所在。每次音乐一响，不管当时是什么姿势，都要挣扎着站起来，开始上下扭动，仿佛是触动了身体里的某个机关。这也是为什么有些玩具能脱颖而出：能放音乐，就是好玩具。</p><p>经过仅仅是短短几个月的优胜劣汰，就算是瞎子也能看出能留住孩子注意力的是哪些东西。依然还是那些电动的、能发声发光的玩意儿。虽然明知电动玩具因为要装电池（or充电），使用有安全风险，维护也麻烦，并且在触发脑部活动上起不到啥作用——就像大人最舒服的阅读还得是看视频——但不得不承认这样的玩具起码不会浪费钱。</p><p>但万万不可污名化电动玩具。至少在我这几个月的选购经历之下，还是能找出一些经典有趣也不脑残的电动玩具。不妨推荐几款。</p><p>比如翻转猴。</p><p>比如扭扭鸭。</p><p>千万不要去买些大人都觉得无聊的玩意儿。如果大人都能乐在其中，那孩子一定不会失望。比如最近购入的一个哆啦A梦遥控车。</p><p>最后轮到那个经典问题：孩子的玩具，会不会太多了。有的人觉得，我们那代孩子根本没啥玩具可玩，还不是一样健康活泼乖乖长大了。我觉得这样的想法太双标了。大人的努力拼搏，不就是为了给孩子创造更好的环境，不管这种环境是关于物质的，还是关于精神的。从某种意义上来说，更多的培训班，还是更多的玩具，都是一回事。</p><p>而且在这点上又有我的一点私心。就是跟表哥家孩子的比较，人家的玩具才叫真的多，每次我家宝宝去他们家都可以玩好久。某次他家孩子上来，说不知道玩什么玩具，虽然我家宝贝还不会说话，却极其“懂事”的把围栏里的一堆抱了出来——多半是玩了大半年以上已经没啥可玩性的玩意儿——让我忍不住有些心疼，瞬间觉得我家宝宝也还没有享受到太多更好的物质和精神生活。至于以后的择校、是否能进高级的幼儿园和小学，暂且不提。至少在一两岁的档口，买几个几十块钱的玩具，多几分快乐，还是应该的吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;宝宝一岁以后，吃和睡逐渐规律，空闲时间反倒多了起来。&lt;/p&gt;
&lt;p&gt;在把每个房间每张抽屉清点倒腾一番之后，失去了对这个九十平小屋的探索兴趣，只能像遛狗一样每天带出去溜达几圈。然而疫情反复，活动大受限制；天空也不争气，打开天气预报，常常一整排的雨水播报。无奈之下，还是得加强玩
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>奥运会，爱国会</title>
    <link href="http://www.kuang2.cn/2021/08/13/%E5%A5%A5%E8%BF%90%E4%BC%9A%EF%BC%8C%E7%88%B1%E5%9B%BD%E4%BC%9A/"/>
    <id>http://www.kuang2.cn/2021/08/13/奥运会，爱国会/</id>
    <published>2021-08-13T22:23:00.000Z</published>
    <updated>2024-02-07T08:30:33.100Z</updated>
    
    <content type="html"><![CDATA[<p>一年从头望到尾，日子淡如水。举世瞩目又令人振奋的事情不多，四年一次的奥运绝对算一个。</p><p>今年的奥运关注度不小，首先是16年的东京八分钟吊足了胃口，接着因为疫情的推迟，差点成了近代史第一届被取消的奥运会。尽管亏损几百亿，日本政府还是咬着牙办了下来，给几十亿为疫情所苦的地球人——以及十几亿为八卦所苦的中国人——平添不少茶余饭后的谈资，至少在这点上该感谢日本人，菅义伟同志的奥林匹克奖章所得不亏。</p><p>就是可惜了开幕式，望穿秋水，却是梦幻泡影。没有哆啦A梦，没有马里奥，更没有迪迦和赛罗。有人说，就算开幕式放两小时的动漫混剪，也比现在这个“阴间”表演好看一百倍。据说开幕式背后有一些内斗，以及财团撤资的传言。可惜没有如果，有的只是苏炳添们的龟派气功cosplay罢了。</p><p>中国队的此番出征则超出预期，收获38金共88枚奖牌，平了往年的海外记录，好些冷门项目创造历史或打破纪录。导致网上有关现任体育局长的梗流传甚广：</p><p style="text-align:center;"><img src="/images/奥运苟局梗.png" style="width:35%" title="奥运苟局梗" alt="奥运苟局梗"/></p><p>对于争得第一名甚至制霸某项目的运动员们，从个人的角度来说，我当然是衷心地祝贺和无比地钦佩，他们无数个日夜的训练值得这份荣誉。但从国家的角度，却偶尔会冒出怀疑的想法：同样是奋斗若干年，却一直居于人后的奥恰洛夫、李宗伟们，是否也值得拥抱一次这样的耀眼时刻呢？</p><p>比如在乒乓球台上，中国队作为绝对统治力的存在，无数次包揽金银牌。让人忍不住担心在其他国家，乒乓这项运动是否还有吸引力可言。这也是养狼计划的由来，官方出马，主动去交流技术，帮助别国培育乒乓球手，以致在混双上憾失历史首枚金牌。因果循环，倒也无可怪罪。</p><p>赛场没有仁慈，奥运不是慈善。希望这只是我个人的怪想。就像波尔也说过，如果没有中国队，他早就拿到大满贯了；但他同时也说，可要是没有中国队，拿再多冠军又有什么挑战呢。</p><p>奥运是个体育的盛会，同时也是爱国的盛会。爱国热情随着赛场的胜负起落。这场四年一届的盛会，是规模最宏大的肾上腺素触发机制。无数人义愤填膺，摇旗呐喊，为祖国队伍万里加油，为家乡健儿的胜利欢呼。看到同种同胞们站上最高奖台，听国歌奏响，也不禁眼含热泪，与有荣焉。</p><p>如果把爱国定义为对本族群的认可，那我觉得小S所经历的风波倒有点莫名其妙。就像宁波人追捧杨倩，湛江人歌颂全红婵，同理香港人支持香港健儿，台湾人点赞台湾运动员，皆为同理。至于“国手”云云，不过是岛内习惯性称呼，让肉身居于台北的徐熙娣养成大陆人的自觉，可以算是所托非人，难孚众望了。身在墙内的国人，可能无法理解墙外的通行语言习惯。打个比方来说，作为gis地图技术行业相关人士，可以提供一个残酷的事实：在github——github是全球代码开源平台、全球程序员开放个人代码网站、gay交友社区（误）——上由外国人提供的开源世界地图数据中，没有一个把taiwan放在china之内。</p><p>不必辛酸，更犯不着愤怒。作为某种模糊地带的敏感边界，这就是可见的事实，尽管墙内的事实与墙外的事实稍有出入。回想下此前屡屡发生的外国企业网站上，地图或国家的归属问题，一切就会豁然开朗。外国人不会理解国人对说辞的较真，对地图的禁忌；就像国人也对美国黑人在美国到底是个啥地位摸不着头脑。</p><p>爱国这件事，是值得好好说道说道的。梁文道说，融入大我的崇高可以消弭个人生活上那微不足道的缺陷。简言之，爱国是尊严的化肥，属于好东西那一类。然而近些年来，至少从微博这个小世界中，却能窥见一些不让人舒服的色彩。这一点从当年柴静、刘瑜的消失，到最近大象公会、回形针的倒掉，已经可见一斑。</p><p>在河南水灾后，热心民众和企业纷纷捐款，慷慨解囊，微博上却又开始了捐款金额大比拼，瞧哪个明星没捐款调查大赛。当年地震后王石提出的“捐款要设上线”倡议，如同投入大海的雨，余波难觅。至于捐款收集大户“壹基金”在创立之初提倡的“每人每月一块钱”，更成了一场空谈。</p><p>另一方面，因为倾囊相助而爆火的鸿星尔克，成了爱国民众的团宠。这倒是好事。国货崛起提了多年，如今也只见到大疆、华为、tiktok这样的IT界代表，是需要点实体行业出来亮亮相了。然而遽然晋升为“爱国品牌”的鸿星尔克，似乎还未完全匹配此身份。毕竟当下标榜爱国品牌的，反而多是些打着爱国旗号，干着收割智商税的混色企业（此处点名某想，花粉饶命）。</p><p>企业如此，个人亦然。可以轻松观察到的现象是，越是喜欢标榜爱国心的明星，越是在大陆市场赚得盆满钵满。比如向太向佐之流。这叫政治嗅觉优先于业务能力。反过来说，越是想在国内市场立稳脚跟的，越需要站好队伍，表足姿态。比如央视现场编曲祖国万岁的某GAI，再比如每次国家级事件发生时，那一长串的明星转发微博名单。</p><p>最后想到的是摘得奥运首金的杨倩，微博杨大妞。夺冠之后，本来毫无人气的微博被狂热的粉丝攻陷，粉丝数暴涨，但很快有人发现杨倩此前晒过耐克的鞋。于是评论里一片骂声，直到有人指出那是在新疆棉事件发生前拍的。现在奥运已经结束几天，那张照片也似乎早早被删除了。然而个人却觉得不必删，不该删。穿鞋是自由，爱国也是自由。何必以某种自由去指摘另一种自由呢？况且行胜于言，为祖国争得荣誉，不知道比手拿键盘的爱国人士高到哪里去了。</p><p>爱国到底还是属于道德的范畴，但又不该和道德混为一谈。如果以道德标准而论，应该遵循的还是九百年前南宋思想家陈亮的那句铮铮格言，“严于律己，宽以待人”。而从爱国爱家这独一无二的情感出发，陈独秀说得更好：“我以为若是用理性做感情冲动的基础，那感情才能够始终热烈坚固不可摇动。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一年从头望到尾，日子淡如水。举世瞩目又令人振奋的事情不多，四年一次的奥运绝对算一个。&lt;/p&gt;
&lt;p&gt;今年的奥运关注度不小，首先是16年的东京八分钟吊足了胃口，接着因为疫情的推迟，差点成了近代史第一届被取消的奥运会。尽管亏损几百亿，日本政府还是咬着牙办了下来，给几十亿为疫情所
      
    
    </summary>
    
      <category term="随笔" scheme="http://www.kuang2.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="杂感" scheme="http://www.kuang2.cn/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>leaflet插件推荐之如何处理大量点位</title>
    <link href="http://www.kuang2.cn/2021/07/13/leaflet%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%E4%B9%8B%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E5%A4%A7%E9%87%8F%E7%82%B9%E4%BD%8D/"/>
    <id>http://www.kuang2.cn/2021/07/13/leaflet插件推荐之如何处理大量点位/</id>
    <published>2021-07-13T21:48:00.000Z</published>
    <updated>2024-02-07T08:30:33.092Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Leaflet-markercluster-点位聚合"><a href="#1-Leaflet-markercluster-点位聚合" class="headerlink" title="1.Leaflet.markercluster 点位聚合"></a>1.<a href="https://github.com/Leaflet/Leaflet.markercluster">Leaflet.markercluster</a> 点位聚合</h3><p>用法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;leaflet.markercluster&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./MarkerCluster.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line">markerClusterGroup = L.<span class="title function_">markerClusterGroup</span>();</span><br><span class="line"></span><br><span class="line">markerClusterGroup.<span class="title function_">addLayer</span>(marker);</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">addLayer</span>(markerClusterGroup);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://leaflet.github.io/Leaflet.markercluster/example/marker-clustering-realworld.388.html">点击查看demo</a></p><h3 id="2-Leaflet-PixiOverlay"><a href="#2-Leaflet-PixiOverlay" class="headerlink" title="2.Leaflet.PixiOverlay"></a>2.<a href="https://github.com/manubb/Leaflet.PixiOverlay">Leaflet.PixiOverlay</a></h3><p>使用Pixi.js绘制叠加层，Pixi.js是一个使用 WebGL 绘制的 JavaScript 库</p><p><a href="https://manubb.github.io/Leaflet.PixiOverlay/french-cities.html">点击查看demo</a></p><h3 id="3-leaflet-markers-canvas"><a href="#3-leaflet-markers-canvas" class="headerlink" title="3.leaflet-markers-canvas"></a>3.<a href="https://github.com/lipton-ice-tea/leaflet-canvas-markers">leaflet-markers-canvas</a></h3><p>用法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./leaflet-markers-canvas.min.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line">markersCanvas = <span class="keyword">new</span> L.<span class="title class_">MarkersCanvas</span>();</span><br><span class="line"></span><br><span class="line">markersCanvas.<span class="title function_">addTo</span>(map);</span><br><span class="line"></span><br><span class="line">markersCanvas.<span class="title function_">addMarker</span>(marker, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://lipton-ice-tea.github.io/leaflet-canvas-markers">点击查看demo</a></p><h3 id="4-leaflet-canvas-markers"><a href="#4-leaflet-canvas-markers" class="headerlink" title="4.leaflet.canvas-markers"></a>4.<a href="https://github.com/corg/Leaflet.Canvas-Markers">leaflet.canvas-markers</a></h3><p>用法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./leaflet.canvas-markers&#x27;</span>;</span><br><span class="line"></span><br><span class="line">markersCanvas = L.<span class="title function_">canvasIconLayer</span>(&#123;&#125;).<span class="title function_">addTo</span>(map);</span><br><span class="line"></span><br><span class="line">markersCanvas.<span class="title function_">addOnClickListener</span>(<span class="keyword">function</span>(<span class="params">e, arr</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> data = arr[<span class="number">0</span>].<span class="property">data</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">ciLayerref.<span class="property">current</span>.<span class="title function_">addLayers</span>(markers);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://ejuke.github.io/Leaflet.Canvas-Markers/examples/index.html">点击查看demo</a></p><p>使用插件leaflet.canvas-markers在缩放时，图标的缩放会产生延迟，使用<a href="https://github.com/corg/Leaflet.Canvas-Markers">fork的分支</a></p><h3 id="5-canvas-marker如何使用自定义颜色的图标？"><a href="#5-canvas-marker如何使用自定义颜色的图标？" class="headerlink" title="5.canvas marker如何使用自定义颜色的图标？"></a>5.canvas marker如何使用自定义颜色的图标？</h3><p>之前项目的一个核心需求就是可以自定义图标颜色，然而canvas marker类插件只支持固定的图片图标。难道要制作N个不同颜色的图标文件吗？</p><p>百般研究之后，我的解决方案是（把原来的SVG图标文件）————转成cavans函数绘制，然后颜色值作为fillcolor传参</p><p>使用 <a href="http://demo.qunee.com/svg2canvas/">svg2canvas</a> 工具即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-Leaflet-markercluster-点位聚合&quot;&gt;&lt;a href=&quot;#1-Leaflet-markercluster-点位聚合&quot; class=&quot;headerlink&quot; title=&quot;1.Leaflet.markercluster 点位聚合&quot;&gt;&lt;/a&gt;1.
      
    
    </summary>
    
      <category term="技术" scheme="http://www.kuang2.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://www.kuang2.cn/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="JS" scheme="http://www.kuang2.cn/tags/JS/"/>
    
      <category term="leaflet" scheme="http://www.kuang2.cn/tags/leaflet/"/>
    
  </entry>
  
  <entry>
    <title>从长安十二时辰到马伯庸</title>
    <link href="http://www.kuang2.cn/2021/06/16/%E4%BB%8E%E9%95%BF%E5%AE%89%E5%8D%81%E4%BA%8C%E6%97%B6%E8%BE%B0%E5%88%B0%E9%A9%AC%E4%BC%AF%E5%BA%B8/"/>
    <id>http://www.kuang2.cn/2021/06/16/从长安十二时辰到马伯庸/</id>
    <published>2021-06-16T20:11:00.000Z</published>
    <updated>2024-02-07T08:30:33.096Z</updated>
    
    <content type="html"><![CDATA[<p>看完了长安十二时辰，这是最近第二本让人热血沸腾的小说了（前一本是乔治马丁的《沙王》）。妹想到浓眉大眼的马亲王也能写出如此让人欲罢不能的小说了。遥想之前《古董局中局》《我读书少，你可别骗我》等一系列让人打瞌睡的故事，其节奏把控能力、情节设置能力竟然突飞猛进到如此地步。让人怀疑是不是哪天在梦中得了马丁老头的真传。</p><p>唯一不变的，依然是亲王的脑洞。关于这本小说，他也说了，是某天玩游戏突发奇想，把刺客信条的故事放在古代会是什么样。再套上《24小时》的框架，一本精彩纷呈的历史（架空？）小说就这么诞生了。</p><p>挖脑洞一直是马伯庸的特长。从我第一次接触到他的作品，科幻世界上的《寂静之城》——讲述未来某天世界被全方位监听，笔上写的，嘴上说的都有了禁忌，当局甚至每天公布敏感词清单——到最喜欢的短篇《末日焚书》——讲述末日来临，必须靠烧书取暖，关于如何选书烧的问题——和最喜欢的知乎回答《什么叫做新闻写作中的“华尔街新闻体”和“倒三角体》——讲述如何用不同新闻社的特色笔法报道鸿门宴，都能看出，脑洞生发才是他小说的第一催动力。</p><p>细心的观众应该能发现，马亲王的脑洞并不是虚无缥缈的，一定有一个落点，那就是文化。他的脑洞都遵从历史，没有《史上第一混乱》那样的恶搞，只是挖掘不被正史记载的部分，融合想象力和幽默感，编排还不错的故事。这一点从他其他“名著”《殷商玛雅征服史》《三国机密》等可见一斑。</p><p>从口味来讲，马伯庸算是个标准的文人。写的书多，看的书更多，爱逛书店，专寻些冷门的书。比如之前写微博说逛书店翻到一本讲漕运、讲财政史的书，奉若至宝——也有过几百本阅历的我，听都没听过。</p><p>如果专业从文，那么讨论马亲王的文化水平，讨论他的名气和受欢迎的程度，也没什么稀奇。奇就奇在他从本科到留学再到工作，都与文字和历史无关。他学的是市场营销，工作进的单位是做电器的施耐德，在销售、商务岗位摸爬滚打近十年。从未抛弃所学专业，但在他的书里倒也完全看不出这些痕迹。</p><p>施耐德毕竟是民营外企，至少在不务正业上，马亲王比娘子关的刘前辈强了一点。至于工作上的低调与成绩上的反差，又能将将追平当年明月。</p><p>有人说马伯庸的文字缺少辨识度。这大概就是非专业作家的典型特征。但这另一重身份，与浸淫多年的理工科思维，似乎正是马亲王幽默感的来源。众所周知文人都有点酸腐和娇弱造作。这是幽默感的大敌。仔细想想但凡是身份多样的作家才有行云流水的幽默感，比如开赛车的韩寒、喂马喂羊的李娟、专业会计还会写程序的王小波……当然，妇科医生加企业CEO的冯唐不算。</p><p>马亲王还有个业余爱好是写段子，这也正是他幽默感的第一出口。在段子手横行的早年微博，他是跟“所长别开枪是我”、“天才小熊猫”、“叫兽易小星”等人混一个圈子的。可惜这两年段子风潮不再，每年的春晚段子大考也是惨不忍睹，马亲王的微博也更新见少。如果感兴趣，可以去翻翻他前几年的微博，尤其是关于儿子马小烦的部分。</p><p>但你最好期望自己不要在他书里看到那些段子，毕竟过时的段子比过时的水果还难闻。</p><p>关于马亲王，网上一直有两个梗。一个是祥瑞御免，说的是他早些年运气爆棚，朋友各种出事，自己却毫发无损，网上便传只要是他接触过的人都要倒霉。以致每次他在网上发文，评论都要齐齐刷一遍“祥瑞御免”，以免厄运缠身。另一个则是陨石遁，来自于他早年出版的一本小说，到结尾编不下去了，直接天上掉下一颗陨石，全剧终。让人直呼上当，简直要满嘴喷粪。</p><p>马亲王出道已久，长版的长篇都有十几本了。正值四十壮年的马亲王，写书似乎越来越游刃有余。这一点看最新的几本豆瓣评分即可。尤其是《长安十二时辰（上）》，都过了8.5。不过个人最推荐的，还是《显微镜下的大明》，一本讲大明时期诉讼案的纪实类书籍，评分更比前者高出0.2分。可见比起写小说，马亲王在历史上的钻研似乎更为精深一些。</p><p>最后说回《长安十二时辰》。怎么讲，此书前百分之八十我给一百分，最后结尾——我就当又被陨石轰顶了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看完了长安十二时辰，这是最近第二本让人热血沸腾的小说了（前一本是乔治马丁的《沙王》）。妹想到浓眉大眼的马亲王也能写出如此让人欲罢不能的小说了。遥想之前《古董局中局》《我读书少，你可别骗我》等一系列让人打瞌睡的故事，其节奏把控能力、情节设置能力竟然突飞猛进到如此地步。让人怀疑
      
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.kuang2.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
